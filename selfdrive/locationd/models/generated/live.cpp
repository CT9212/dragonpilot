#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8762667531083925801) {
   out_8762667531083925801[0] = 0;
   out_8762667531083925801[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8762667531083925801[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8762667531083925801[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8762667531083925801[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8762667531083925801[5] = -sin(in_vec[1]);
   out_8762667531083925801[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8762667531083925801[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8762667531083925801[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8762667531083925801[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8762667531083925801[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8762667531083925801[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8762667531083925801[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8762667531083925801[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8762667531083925801[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8762667531083925801[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8762667531083925801[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8762667531083925801[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2181421917658467336) {
   out_2181421917658467336[0] = delta_x[0] + nom_x[0];
   out_2181421917658467336[1] = delta_x[1] + nom_x[1];
   out_2181421917658467336[2] = delta_x[2] + nom_x[2];
   out_2181421917658467336[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2181421917658467336[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2181421917658467336[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2181421917658467336[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2181421917658467336[7] = delta_x[6] + nom_x[7];
   out_2181421917658467336[8] = delta_x[7] + nom_x[8];
   out_2181421917658467336[9] = delta_x[8] + nom_x[9];
   out_2181421917658467336[10] = delta_x[9] + nom_x[10];
   out_2181421917658467336[11] = delta_x[10] + nom_x[11];
   out_2181421917658467336[12] = delta_x[11] + nom_x[12];
   out_2181421917658467336[13] = delta_x[12] + nom_x[13];
   out_2181421917658467336[14] = delta_x[13] + nom_x[14];
   out_2181421917658467336[15] = delta_x[14] + nom_x[15];
   out_2181421917658467336[16] = delta_x[15] + nom_x[16];
   out_2181421917658467336[17] = delta_x[16] + nom_x[17];
   out_2181421917658467336[18] = delta_x[17] + nom_x[18];
   out_2181421917658467336[19] = delta_x[18] + nom_x[19];
   out_2181421917658467336[20] = delta_x[19] + nom_x[20];
   out_2181421917658467336[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4232698826433939920) {
   out_4232698826433939920[0] = -nom_x[0] + true_x[0];
   out_4232698826433939920[1] = -nom_x[1] + true_x[1];
   out_4232698826433939920[2] = -nom_x[2] + true_x[2];
   out_4232698826433939920[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4232698826433939920[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4232698826433939920[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4232698826433939920[6] = -nom_x[7] + true_x[7];
   out_4232698826433939920[7] = -nom_x[8] + true_x[8];
   out_4232698826433939920[8] = -nom_x[9] + true_x[9];
   out_4232698826433939920[9] = -nom_x[10] + true_x[10];
   out_4232698826433939920[10] = -nom_x[11] + true_x[11];
   out_4232698826433939920[11] = -nom_x[12] + true_x[12];
   out_4232698826433939920[12] = -nom_x[13] + true_x[13];
   out_4232698826433939920[13] = -nom_x[14] + true_x[14];
   out_4232698826433939920[14] = -nom_x[15] + true_x[15];
   out_4232698826433939920[15] = -nom_x[16] + true_x[16];
   out_4232698826433939920[16] = -nom_x[17] + true_x[17];
   out_4232698826433939920[17] = -nom_x[18] + true_x[18];
   out_4232698826433939920[18] = -nom_x[19] + true_x[19];
   out_4232698826433939920[19] = -nom_x[20] + true_x[20];
   out_4232698826433939920[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3067005223293357501) {
   out_3067005223293357501[0] = 1.0;
   out_3067005223293357501[1] = 0;
   out_3067005223293357501[2] = 0;
   out_3067005223293357501[3] = 0;
   out_3067005223293357501[4] = 0;
   out_3067005223293357501[5] = 0;
   out_3067005223293357501[6] = 0;
   out_3067005223293357501[7] = 0;
   out_3067005223293357501[8] = 0;
   out_3067005223293357501[9] = 0;
   out_3067005223293357501[10] = 0;
   out_3067005223293357501[11] = 0;
   out_3067005223293357501[12] = 0;
   out_3067005223293357501[13] = 0;
   out_3067005223293357501[14] = 0;
   out_3067005223293357501[15] = 0;
   out_3067005223293357501[16] = 0;
   out_3067005223293357501[17] = 0;
   out_3067005223293357501[18] = 0;
   out_3067005223293357501[19] = 0;
   out_3067005223293357501[20] = 0;
   out_3067005223293357501[21] = 0;
   out_3067005223293357501[22] = 1.0;
   out_3067005223293357501[23] = 0;
   out_3067005223293357501[24] = 0;
   out_3067005223293357501[25] = 0;
   out_3067005223293357501[26] = 0;
   out_3067005223293357501[27] = 0;
   out_3067005223293357501[28] = 0;
   out_3067005223293357501[29] = 0;
   out_3067005223293357501[30] = 0;
   out_3067005223293357501[31] = 0;
   out_3067005223293357501[32] = 0;
   out_3067005223293357501[33] = 0;
   out_3067005223293357501[34] = 0;
   out_3067005223293357501[35] = 0;
   out_3067005223293357501[36] = 0;
   out_3067005223293357501[37] = 0;
   out_3067005223293357501[38] = 0;
   out_3067005223293357501[39] = 0;
   out_3067005223293357501[40] = 0;
   out_3067005223293357501[41] = 0;
   out_3067005223293357501[42] = 0;
   out_3067005223293357501[43] = 0;
   out_3067005223293357501[44] = 1.0;
   out_3067005223293357501[45] = 0;
   out_3067005223293357501[46] = 0;
   out_3067005223293357501[47] = 0;
   out_3067005223293357501[48] = 0;
   out_3067005223293357501[49] = 0;
   out_3067005223293357501[50] = 0;
   out_3067005223293357501[51] = 0;
   out_3067005223293357501[52] = 0;
   out_3067005223293357501[53] = 0;
   out_3067005223293357501[54] = 0;
   out_3067005223293357501[55] = 0;
   out_3067005223293357501[56] = 0;
   out_3067005223293357501[57] = 0;
   out_3067005223293357501[58] = 0;
   out_3067005223293357501[59] = 0;
   out_3067005223293357501[60] = 0;
   out_3067005223293357501[61] = 0;
   out_3067005223293357501[62] = 0;
   out_3067005223293357501[63] = 0;
   out_3067005223293357501[64] = 0;
   out_3067005223293357501[65] = 0;
   out_3067005223293357501[66] = -0.5*state[4];
   out_3067005223293357501[67] = -0.5*state[5];
   out_3067005223293357501[68] = -0.5*state[6];
   out_3067005223293357501[69] = 0;
   out_3067005223293357501[70] = 0;
   out_3067005223293357501[71] = 0;
   out_3067005223293357501[72] = 0;
   out_3067005223293357501[73] = 0;
   out_3067005223293357501[74] = 0;
   out_3067005223293357501[75] = 0;
   out_3067005223293357501[76] = 0;
   out_3067005223293357501[77] = 0;
   out_3067005223293357501[78] = 0;
   out_3067005223293357501[79] = 0;
   out_3067005223293357501[80] = 0;
   out_3067005223293357501[81] = 0;
   out_3067005223293357501[82] = 0;
   out_3067005223293357501[83] = 0;
   out_3067005223293357501[84] = 0;
   out_3067005223293357501[85] = 0;
   out_3067005223293357501[86] = 0;
   out_3067005223293357501[87] = 0.5*state[3];
   out_3067005223293357501[88] = 0.5*state[6];
   out_3067005223293357501[89] = -0.5*state[5];
   out_3067005223293357501[90] = 0;
   out_3067005223293357501[91] = 0;
   out_3067005223293357501[92] = 0;
   out_3067005223293357501[93] = 0;
   out_3067005223293357501[94] = 0;
   out_3067005223293357501[95] = 0;
   out_3067005223293357501[96] = 0;
   out_3067005223293357501[97] = 0;
   out_3067005223293357501[98] = 0;
   out_3067005223293357501[99] = 0;
   out_3067005223293357501[100] = 0;
   out_3067005223293357501[101] = 0;
   out_3067005223293357501[102] = 0;
   out_3067005223293357501[103] = 0;
   out_3067005223293357501[104] = 0;
   out_3067005223293357501[105] = 0;
   out_3067005223293357501[106] = 0;
   out_3067005223293357501[107] = 0;
   out_3067005223293357501[108] = -0.5*state[6];
   out_3067005223293357501[109] = 0.5*state[3];
   out_3067005223293357501[110] = 0.5*state[4];
   out_3067005223293357501[111] = 0;
   out_3067005223293357501[112] = 0;
   out_3067005223293357501[113] = 0;
   out_3067005223293357501[114] = 0;
   out_3067005223293357501[115] = 0;
   out_3067005223293357501[116] = 0;
   out_3067005223293357501[117] = 0;
   out_3067005223293357501[118] = 0;
   out_3067005223293357501[119] = 0;
   out_3067005223293357501[120] = 0;
   out_3067005223293357501[121] = 0;
   out_3067005223293357501[122] = 0;
   out_3067005223293357501[123] = 0;
   out_3067005223293357501[124] = 0;
   out_3067005223293357501[125] = 0;
   out_3067005223293357501[126] = 0;
   out_3067005223293357501[127] = 0;
   out_3067005223293357501[128] = 0;
   out_3067005223293357501[129] = 0.5*state[5];
   out_3067005223293357501[130] = -0.5*state[4];
   out_3067005223293357501[131] = 0.5*state[3];
   out_3067005223293357501[132] = 0;
   out_3067005223293357501[133] = 0;
   out_3067005223293357501[134] = 0;
   out_3067005223293357501[135] = 0;
   out_3067005223293357501[136] = 0;
   out_3067005223293357501[137] = 0;
   out_3067005223293357501[138] = 0;
   out_3067005223293357501[139] = 0;
   out_3067005223293357501[140] = 0;
   out_3067005223293357501[141] = 0;
   out_3067005223293357501[142] = 0;
   out_3067005223293357501[143] = 0;
   out_3067005223293357501[144] = 0;
   out_3067005223293357501[145] = 0;
   out_3067005223293357501[146] = 0;
   out_3067005223293357501[147] = 0;
   out_3067005223293357501[148] = 0;
   out_3067005223293357501[149] = 0;
   out_3067005223293357501[150] = 0;
   out_3067005223293357501[151] = 0;
   out_3067005223293357501[152] = 0;
   out_3067005223293357501[153] = 1.0;
   out_3067005223293357501[154] = 0;
   out_3067005223293357501[155] = 0;
   out_3067005223293357501[156] = 0;
   out_3067005223293357501[157] = 0;
   out_3067005223293357501[158] = 0;
   out_3067005223293357501[159] = 0;
   out_3067005223293357501[160] = 0;
   out_3067005223293357501[161] = 0;
   out_3067005223293357501[162] = 0;
   out_3067005223293357501[163] = 0;
   out_3067005223293357501[164] = 0;
   out_3067005223293357501[165] = 0;
   out_3067005223293357501[166] = 0;
   out_3067005223293357501[167] = 0;
   out_3067005223293357501[168] = 0;
   out_3067005223293357501[169] = 0;
   out_3067005223293357501[170] = 0;
   out_3067005223293357501[171] = 0;
   out_3067005223293357501[172] = 0;
   out_3067005223293357501[173] = 0;
   out_3067005223293357501[174] = 0;
   out_3067005223293357501[175] = 1.0;
   out_3067005223293357501[176] = 0;
   out_3067005223293357501[177] = 0;
   out_3067005223293357501[178] = 0;
   out_3067005223293357501[179] = 0;
   out_3067005223293357501[180] = 0;
   out_3067005223293357501[181] = 0;
   out_3067005223293357501[182] = 0;
   out_3067005223293357501[183] = 0;
   out_3067005223293357501[184] = 0;
   out_3067005223293357501[185] = 0;
   out_3067005223293357501[186] = 0;
   out_3067005223293357501[187] = 0;
   out_3067005223293357501[188] = 0;
   out_3067005223293357501[189] = 0;
   out_3067005223293357501[190] = 0;
   out_3067005223293357501[191] = 0;
   out_3067005223293357501[192] = 0;
   out_3067005223293357501[193] = 0;
   out_3067005223293357501[194] = 0;
   out_3067005223293357501[195] = 0;
   out_3067005223293357501[196] = 0;
   out_3067005223293357501[197] = 1.0;
   out_3067005223293357501[198] = 0;
   out_3067005223293357501[199] = 0;
   out_3067005223293357501[200] = 0;
   out_3067005223293357501[201] = 0;
   out_3067005223293357501[202] = 0;
   out_3067005223293357501[203] = 0;
   out_3067005223293357501[204] = 0;
   out_3067005223293357501[205] = 0;
   out_3067005223293357501[206] = 0;
   out_3067005223293357501[207] = 0;
   out_3067005223293357501[208] = 0;
   out_3067005223293357501[209] = 0;
   out_3067005223293357501[210] = 0;
   out_3067005223293357501[211] = 0;
   out_3067005223293357501[212] = 0;
   out_3067005223293357501[213] = 0;
   out_3067005223293357501[214] = 0;
   out_3067005223293357501[215] = 0;
   out_3067005223293357501[216] = 0;
   out_3067005223293357501[217] = 0;
   out_3067005223293357501[218] = 0;
   out_3067005223293357501[219] = 1.0;
   out_3067005223293357501[220] = 0;
   out_3067005223293357501[221] = 0;
   out_3067005223293357501[222] = 0;
   out_3067005223293357501[223] = 0;
   out_3067005223293357501[224] = 0;
   out_3067005223293357501[225] = 0;
   out_3067005223293357501[226] = 0;
   out_3067005223293357501[227] = 0;
   out_3067005223293357501[228] = 0;
   out_3067005223293357501[229] = 0;
   out_3067005223293357501[230] = 0;
   out_3067005223293357501[231] = 0;
   out_3067005223293357501[232] = 0;
   out_3067005223293357501[233] = 0;
   out_3067005223293357501[234] = 0;
   out_3067005223293357501[235] = 0;
   out_3067005223293357501[236] = 0;
   out_3067005223293357501[237] = 0;
   out_3067005223293357501[238] = 0;
   out_3067005223293357501[239] = 0;
   out_3067005223293357501[240] = 0;
   out_3067005223293357501[241] = 1.0;
   out_3067005223293357501[242] = 0;
   out_3067005223293357501[243] = 0;
   out_3067005223293357501[244] = 0;
   out_3067005223293357501[245] = 0;
   out_3067005223293357501[246] = 0;
   out_3067005223293357501[247] = 0;
   out_3067005223293357501[248] = 0;
   out_3067005223293357501[249] = 0;
   out_3067005223293357501[250] = 0;
   out_3067005223293357501[251] = 0;
   out_3067005223293357501[252] = 0;
   out_3067005223293357501[253] = 0;
   out_3067005223293357501[254] = 0;
   out_3067005223293357501[255] = 0;
   out_3067005223293357501[256] = 0;
   out_3067005223293357501[257] = 0;
   out_3067005223293357501[258] = 0;
   out_3067005223293357501[259] = 0;
   out_3067005223293357501[260] = 0;
   out_3067005223293357501[261] = 0;
   out_3067005223293357501[262] = 0;
   out_3067005223293357501[263] = 1.0;
   out_3067005223293357501[264] = 0;
   out_3067005223293357501[265] = 0;
   out_3067005223293357501[266] = 0;
   out_3067005223293357501[267] = 0;
   out_3067005223293357501[268] = 0;
   out_3067005223293357501[269] = 0;
   out_3067005223293357501[270] = 0;
   out_3067005223293357501[271] = 0;
   out_3067005223293357501[272] = 0;
   out_3067005223293357501[273] = 0;
   out_3067005223293357501[274] = 0;
   out_3067005223293357501[275] = 0;
   out_3067005223293357501[276] = 0;
   out_3067005223293357501[277] = 0;
   out_3067005223293357501[278] = 0;
   out_3067005223293357501[279] = 0;
   out_3067005223293357501[280] = 0;
   out_3067005223293357501[281] = 0;
   out_3067005223293357501[282] = 0;
   out_3067005223293357501[283] = 0;
   out_3067005223293357501[284] = 0;
   out_3067005223293357501[285] = 1.0;
   out_3067005223293357501[286] = 0;
   out_3067005223293357501[287] = 0;
   out_3067005223293357501[288] = 0;
   out_3067005223293357501[289] = 0;
   out_3067005223293357501[290] = 0;
   out_3067005223293357501[291] = 0;
   out_3067005223293357501[292] = 0;
   out_3067005223293357501[293] = 0;
   out_3067005223293357501[294] = 0;
   out_3067005223293357501[295] = 0;
   out_3067005223293357501[296] = 0;
   out_3067005223293357501[297] = 0;
   out_3067005223293357501[298] = 0;
   out_3067005223293357501[299] = 0;
   out_3067005223293357501[300] = 0;
   out_3067005223293357501[301] = 0;
   out_3067005223293357501[302] = 0;
   out_3067005223293357501[303] = 0;
   out_3067005223293357501[304] = 0;
   out_3067005223293357501[305] = 0;
   out_3067005223293357501[306] = 0;
   out_3067005223293357501[307] = 1.0;
   out_3067005223293357501[308] = 0;
   out_3067005223293357501[309] = 0;
   out_3067005223293357501[310] = 0;
   out_3067005223293357501[311] = 0;
   out_3067005223293357501[312] = 0;
   out_3067005223293357501[313] = 0;
   out_3067005223293357501[314] = 0;
   out_3067005223293357501[315] = 0;
   out_3067005223293357501[316] = 0;
   out_3067005223293357501[317] = 0;
   out_3067005223293357501[318] = 0;
   out_3067005223293357501[319] = 0;
   out_3067005223293357501[320] = 0;
   out_3067005223293357501[321] = 0;
   out_3067005223293357501[322] = 0;
   out_3067005223293357501[323] = 0;
   out_3067005223293357501[324] = 0;
   out_3067005223293357501[325] = 0;
   out_3067005223293357501[326] = 0;
   out_3067005223293357501[327] = 0;
   out_3067005223293357501[328] = 0;
   out_3067005223293357501[329] = 1.0;
   out_3067005223293357501[330] = 0;
   out_3067005223293357501[331] = 0;
   out_3067005223293357501[332] = 0;
   out_3067005223293357501[333] = 0;
   out_3067005223293357501[334] = 0;
   out_3067005223293357501[335] = 0;
   out_3067005223293357501[336] = 0;
   out_3067005223293357501[337] = 0;
   out_3067005223293357501[338] = 0;
   out_3067005223293357501[339] = 0;
   out_3067005223293357501[340] = 0;
   out_3067005223293357501[341] = 0;
   out_3067005223293357501[342] = 0;
   out_3067005223293357501[343] = 0;
   out_3067005223293357501[344] = 0;
   out_3067005223293357501[345] = 0;
   out_3067005223293357501[346] = 0;
   out_3067005223293357501[347] = 0;
   out_3067005223293357501[348] = 0;
   out_3067005223293357501[349] = 0;
   out_3067005223293357501[350] = 0;
   out_3067005223293357501[351] = 1.0;
   out_3067005223293357501[352] = 0;
   out_3067005223293357501[353] = 0;
   out_3067005223293357501[354] = 0;
   out_3067005223293357501[355] = 0;
   out_3067005223293357501[356] = 0;
   out_3067005223293357501[357] = 0;
   out_3067005223293357501[358] = 0;
   out_3067005223293357501[359] = 0;
   out_3067005223293357501[360] = 0;
   out_3067005223293357501[361] = 0;
   out_3067005223293357501[362] = 0;
   out_3067005223293357501[363] = 0;
   out_3067005223293357501[364] = 0;
   out_3067005223293357501[365] = 0;
   out_3067005223293357501[366] = 0;
   out_3067005223293357501[367] = 0;
   out_3067005223293357501[368] = 0;
   out_3067005223293357501[369] = 0;
   out_3067005223293357501[370] = 0;
   out_3067005223293357501[371] = 0;
   out_3067005223293357501[372] = 0;
   out_3067005223293357501[373] = 1.0;
   out_3067005223293357501[374] = 0;
   out_3067005223293357501[375] = 0;
   out_3067005223293357501[376] = 0;
   out_3067005223293357501[377] = 0;
   out_3067005223293357501[378] = 0;
   out_3067005223293357501[379] = 0;
   out_3067005223293357501[380] = 0;
   out_3067005223293357501[381] = 0;
   out_3067005223293357501[382] = 0;
   out_3067005223293357501[383] = 0;
   out_3067005223293357501[384] = 0;
   out_3067005223293357501[385] = 0;
   out_3067005223293357501[386] = 0;
   out_3067005223293357501[387] = 0;
   out_3067005223293357501[388] = 0;
   out_3067005223293357501[389] = 0;
   out_3067005223293357501[390] = 0;
   out_3067005223293357501[391] = 0;
   out_3067005223293357501[392] = 0;
   out_3067005223293357501[393] = 0;
   out_3067005223293357501[394] = 0;
   out_3067005223293357501[395] = 1.0;
   out_3067005223293357501[396] = 0;
   out_3067005223293357501[397] = 0;
   out_3067005223293357501[398] = 0;
   out_3067005223293357501[399] = 0;
   out_3067005223293357501[400] = 0;
   out_3067005223293357501[401] = 0;
   out_3067005223293357501[402] = 0;
   out_3067005223293357501[403] = 0;
   out_3067005223293357501[404] = 0;
   out_3067005223293357501[405] = 0;
   out_3067005223293357501[406] = 0;
   out_3067005223293357501[407] = 0;
   out_3067005223293357501[408] = 0;
   out_3067005223293357501[409] = 0;
   out_3067005223293357501[410] = 0;
   out_3067005223293357501[411] = 0;
   out_3067005223293357501[412] = 0;
   out_3067005223293357501[413] = 0;
   out_3067005223293357501[414] = 0;
   out_3067005223293357501[415] = 0;
   out_3067005223293357501[416] = 0;
   out_3067005223293357501[417] = 1.0;
   out_3067005223293357501[418] = 0;
   out_3067005223293357501[419] = 0;
   out_3067005223293357501[420] = 0;
   out_3067005223293357501[421] = 0;
   out_3067005223293357501[422] = 0;
   out_3067005223293357501[423] = 0;
   out_3067005223293357501[424] = 0;
   out_3067005223293357501[425] = 0;
   out_3067005223293357501[426] = 0;
   out_3067005223293357501[427] = 0;
   out_3067005223293357501[428] = 0;
   out_3067005223293357501[429] = 0;
   out_3067005223293357501[430] = 0;
   out_3067005223293357501[431] = 0;
   out_3067005223293357501[432] = 0;
   out_3067005223293357501[433] = 0;
   out_3067005223293357501[434] = 0;
   out_3067005223293357501[435] = 0;
   out_3067005223293357501[436] = 0;
   out_3067005223293357501[437] = 0;
   out_3067005223293357501[438] = 0;
   out_3067005223293357501[439] = 1.0;
   out_3067005223293357501[440] = 0;
   out_3067005223293357501[441] = 0;
   out_3067005223293357501[442] = 0;
   out_3067005223293357501[443] = 0;
   out_3067005223293357501[444] = 0;
   out_3067005223293357501[445] = 0;
   out_3067005223293357501[446] = 0;
   out_3067005223293357501[447] = 0;
   out_3067005223293357501[448] = 0;
   out_3067005223293357501[449] = 0;
   out_3067005223293357501[450] = 0;
   out_3067005223293357501[451] = 0;
   out_3067005223293357501[452] = 0;
   out_3067005223293357501[453] = 0;
   out_3067005223293357501[454] = 0;
   out_3067005223293357501[455] = 0;
   out_3067005223293357501[456] = 0;
   out_3067005223293357501[457] = 0;
   out_3067005223293357501[458] = 0;
   out_3067005223293357501[459] = 0;
   out_3067005223293357501[460] = 0;
   out_3067005223293357501[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8579961002706476838) {
   out_8579961002706476838[0] = dt*state[7] + state[0];
   out_8579961002706476838[1] = dt*state[8] + state[1];
   out_8579961002706476838[2] = dt*state[9] + state[2];
   out_8579961002706476838[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8579961002706476838[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8579961002706476838[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8579961002706476838[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8579961002706476838[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8579961002706476838[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8579961002706476838[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8579961002706476838[10] = state[10];
   out_8579961002706476838[11] = state[11];
   out_8579961002706476838[12] = state[12];
   out_8579961002706476838[13] = state[13];
   out_8579961002706476838[14] = state[14];
   out_8579961002706476838[15] = state[15];
   out_8579961002706476838[16] = state[16];
   out_8579961002706476838[17] = state[17];
   out_8579961002706476838[18] = state[18];
   out_8579961002706476838[19] = state[19];
   out_8579961002706476838[20] = state[20];
   out_8579961002706476838[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1644457020271563935) {
   out_1644457020271563935[0] = 1;
   out_1644457020271563935[1] = 0;
   out_1644457020271563935[2] = 0;
   out_1644457020271563935[3] = 0;
   out_1644457020271563935[4] = 0;
   out_1644457020271563935[5] = 0;
   out_1644457020271563935[6] = dt;
   out_1644457020271563935[7] = 0;
   out_1644457020271563935[8] = 0;
   out_1644457020271563935[9] = 0;
   out_1644457020271563935[10] = 0;
   out_1644457020271563935[11] = 0;
   out_1644457020271563935[12] = 0;
   out_1644457020271563935[13] = 0;
   out_1644457020271563935[14] = 0;
   out_1644457020271563935[15] = 0;
   out_1644457020271563935[16] = 0;
   out_1644457020271563935[17] = 0;
   out_1644457020271563935[18] = 0;
   out_1644457020271563935[19] = 0;
   out_1644457020271563935[20] = 0;
   out_1644457020271563935[21] = 0;
   out_1644457020271563935[22] = 1;
   out_1644457020271563935[23] = 0;
   out_1644457020271563935[24] = 0;
   out_1644457020271563935[25] = 0;
   out_1644457020271563935[26] = 0;
   out_1644457020271563935[27] = 0;
   out_1644457020271563935[28] = dt;
   out_1644457020271563935[29] = 0;
   out_1644457020271563935[30] = 0;
   out_1644457020271563935[31] = 0;
   out_1644457020271563935[32] = 0;
   out_1644457020271563935[33] = 0;
   out_1644457020271563935[34] = 0;
   out_1644457020271563935[35] = 0;
   out_1644457020271563935[36] = 0;
   out_1644457020271563935[37] = 0;
   out_1644457020271563935[38] = 0;
   out_1644457020271563935[39] = 0;
   out_1644457020271563935[40] = 0;
   out_1644457020271563935[41] = 0;
   out_1644457020271563935[42] = 0;
   out_1644457020271563935[43] = 0;
   out_1644457020271563935[44] = 1;
   out_1644457020271563935[45] = 0;
   out_1644457020271563935[46] = 0;
   out_1644457020271563935[47] = 0;
   out_1644457020271563935[48] = 0;
   out_1644457020271563935[49] = 0;
   out_1644457020271563935[50] = dt;
   out_1644457020271563935[51] = 0;
   out_1644457020271563935[52] = 0;
   out_1644457020271563935[53] = 0;
   out_1644457020271563935[54] = 0;
   out_1644457020271563935[55] = 0;
   out_1644457020271563935[56] = 0;
   out_1644457020271563935[57] = 0;
   out_1644457020271563935[58] = 0;
   out_1644457020271563935[59] = 0;
   out_1644457020271563935[60] = 0;
   out_1644457020271563935[61] = 0;
   out_1644457020271563935[62] = 0;
   out_1644457020271563935[63] = 0;
   out_1644457020271563935[64] = 0;
   out_1644457020271563935[65] = 0;
   out_1644457020271563935[66] = 1;
   out_1644457020271563935[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1644457020271563935[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1644457020271563935[69] = 0;
   out_1644457020271563935[70] = 0;
   out_1644457020271563935[71] = 0;
   out_1644457020271563935[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1644457020271563935[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1644457020271563935[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1644457020271563935[75] = 0;
   out_1644457020271563935[76] = 0;
   out_1644457020271563935[77] = 0;
   out_1644457020271563935[78] = 0;
   out_1644457020271563935[79] = 0;
   out_1644457020271563935[80] = 0;
   out_1644457020271563935[81] = 0;
   out_1644457020271563935[82] = 0;
   out_1644457020271563935[83] = 0;
   out_1644457020271563935[84] = 0;
   out_1644457020271563935[85] = 0;
   out_1644457020271563935[86] = 0;
   out_1644457020271563935[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1644457020271563935[88] = 1;
   out_1644457020271563935[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1644457020271563935[90] = 0;
   out_1644457020271563935[91] = 0;
   out_1644457020271563935[92] = 0;
   out_1644457020271563935[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1644457020271563935[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1644457020271563935[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1644457020271563935[96] = 0;
   out_1644457020271563935[97] = 0;
   out_1644457020271563935[98] = 0;
   out_1644457020271563935[99] = 0;
   out_1644457020271563935[100] = 0;
   out_1644457020271563935[101] = 0;
   out_1644457020271563935[102] = 0;
   out_1644457020271563935[103] = 0;
   out_1644457020271563935[104] = 0;
   out_1644457020271563935[105] = 0;
   out_1644457020271563935[106] = 0;
   out_1644457020271563935[107] = 0;
   out_1644457020271563935[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1644457020271563935[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1644457020271563935[110] = 1;
   out_1644457020271563935[111] = 0;
   out_1644457020271563935[112] = 0;
   out_1644457020271563935[113] = 0;
   out_1644457020271563935[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1644457020271563935[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1644457020271563935[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1644457020271563935[117] = 0;
   out_1644457020271563935[118] = 0;
   out_1644457020271563935[119] = 0;
   out_1644457020271563935[120] = 0;
   out_1644457020271563935[121] = 0;
   out_1644457020271563935[122] = 0;
   out_1644457020271563935[123] = 0;
   out_1644457020271563935[124] = 0;
   out_1644457020271563935[125] = 0;
   out_1644457020271563935[126] = 0;
   out_1644457020271563935[127] = 0;
   out_1644457020271563935[128] = 0;
   out_1644457020271563935[129] = 0;
   out_1644457020271563935[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1644457020271563935[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1644457020271563935[132] = 1;
   out_1644457020271563935[133] = 0;
   out_1644457020271563935[134] = 0;
   out_1644457020271563935[135] = 0;
   out_1644457020271563935[136] = 0;
   out_1644457020271563935[137] = 0;
   out_1644457020271563935[138] = 0;
   out_1644457020271563935[139] = 0;
   out_1644457020271563935[140] = 0;
   out_1644457020271563935[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1644457020271563935[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1644457020271563935[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1644457020271563935[144] = 0;
   out_1644457020271563935[145] = 0;
   out_1644457020271563935[146] = 0;
   out_1644457020271563935[147] = 0;
   out_1644457020271563935[148] = 0;
   out_1644457020271563935[149] = 0;
   out_1644457020271563935[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1644457020271563935[151] = 0;
   out_1644457020271563935[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1644457020271563935[153] = 0;
   out_1644457020271563935[154] = 1;
   out_1644457020271563935[155] = 0;
   out_1644457020271563935[156] = 0;
   out_1644457020271563935[157] = 0;
   out_1644457020271563935[158] = 0;
   out_1644457020271563935[159] = 0;
   out_1644457020271563935[160] = 0;
   out_1644457020271563935[161] = 0;
   out_1644457020271563935[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1644457020271563935[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1644457020271563935[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1644457020271563935[165] = 0;
   out_1644457020271563935[166] = 0;
   out_1644457020271563935[167] = 0;
   out_1644457020271563935[168] = 0;
   out_1644457020271563935[169] = 0;
   out_1644457020271563935[170] = 0;
   out_1644457020271563935[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1644457020271563935[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1644457020271563935[173] = 0;
   out_1644457020271563935[174] = 0;
   out_1644457020271563935[175] = 0;
   out_1644457020271563935[176] = 1;
   out_1644457020271563935[177] = 0;
   out_1644457020271563935[178] = 0;
   out_1644457020271563935[179] = 0;
   out_1644457020271563935[180] = 0;
   out_1644457020271563935[181] = 0;
   out_1644457020271563935[182] = 0;
   out_1644457020271563935[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1644457020271563935[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1644457020271563935[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1644457020271563935[186] = 0;
   out_1644457020271563935[187] = 0;
   out_1644457020271563935[188] = 0;
   out_1644457020271563935[189] = 0;
   out_1644457020271563935[190] = 0;
   out_1644457020271563935[191] = 0;
   out_1644457020271563935[192] = 0;
   out_1644457020271563935[193] = 0;
   out_1644457020271563935[194] = 0;
   out_1644457020271563935[195] = 0;
   out_1644457020271563935[196] = 0;
   out_1644457020271563935[197] = 0;
   out_1644457020271563935[198] = 1;
   out_1644457020271563935[199] = 0;
   out_1644457020271563935[200] = 0;
   out_1644457020271563935[201] = 0;
   out_1644457020271563935[202] = 0;
   out_1644457020271563935[203] = 0;
   out_1644457020271563935[204] = 0;
   out_1644457020271563935[205] = 0;
   out_1644457020271563935[206] = 0;
   out_1644457020271563935[207] = 0;
   out_1644457020271563935[208] = 0;
   out_1644457020271563935[209] = 0;
   out_1644457020271563935[210] = 0;
   out_1644457020271563935[211] = 0;
   out_1644457020271563935[212] = 0;
   out_1644457020271563935[213] = 0;
   out_1644457020271563935[214] = 0;
   out_1644457020271563935[215] = 0;
   out_1644457020271563935[216] = 0;
   out_1644457020271563935[217] = 0;
   out_1644457020271563935[218] = 0;
   out_1644457020271563935[219] = 0;
   out_1644457020271563935[220] = 1;
   out_1644457020271563935[221] = 0;
   out_1644457020271563935[222] = 0;
   out_1644457020271563935[223] = 0;
   out_1644457020271563935[224] = 0;
   out_1644457020271563935[225] = 0;
   out_1644457020271563935[226] = 0;
   out_1644457020271563935[227] = 0;
   out_1644457020271563935[228] = 0;
   out_1644457020271563935[229] = 0;
   out_1644457020271563935[230] = 0;
   out_1644457020271563935[231] = 0;
   out_1644457020271563935[232] = 0;
   out_1644457020271563935[233] = 0;
   out_1644457020271563935[234] = 0;
   out_1644457020271563935[235] = 0;
   out_1644457020271563935[236] = 0;
   out_1644457020271563935[237] = 0;
   out_1644457020271563935[238] = 0;
   out_1644457020271563935[239] = 0;
   out_1644457020271563935[240] = 0;
   out_1644457020271563935[241] = 0;
   out_1644457020271563935[242] = 1;
   out_1644457020271563935[243] = 0;
   out_1644457020271563935[244] = 0;
   out_1644457020271563935[245] = 0;
   out_1644457020271563935[246] = 0;
   out_1644457020271563935[247] = 0;
   out_1644457020271563935[248] = 0;
   out_1644457020271563935[249] = 0;
   out_1644457020271563935[250] = 0;
   out_1644457020271563935[251] = 0;
   out_1644457020271563935[252] = 0;
   out_1644457020271563935[253] = 0;
   out_1644457020271563935[254] = 0;
   out_1644457020271563935[255] = 0;
   out_1644457020271563935[256] = 0;
   out_1644457020271563935[257] = 0;
   out_1644457020271563935[258] = 0;
   out_1644457020271563935[259] = 0;
   out_1644457020271563935[260] = 0;
   out_1644457020271563935[261] = 0;
   out_1644457020271563935[262] = 0;
   out_1644457020271563935[263] = 0;
   out_1644457020271563935[264] = 1;
   out_1644457020271563935[265] = 0;
   out_1644457020271563935[266] = 0;
   out_1644457020271563935[267] = 0;
   out_1644457020271563935[268] = 0;
   out_1644457020271563935[269] = 0;
   out_1644457020271563935[270] = 0;
   out_1644457020271563935[271] = 0;
   out_1644457020271563935[272] = 0;
   out_1644457020271563935[273] = 0;
   out_1644457020271563935[274] = 0;
   out_1644457020271563935[275] = 0;
   out_1644457020271563935[276] = 0;
   out_1644457020271563935[277] = 0;
   out_1644457020271563935[278] = 0;
   out_1644457020271563935[279] = 0;
   out_1644457020271563935[280] = 0;
   out_1644457020271563935[281] = 0;
   out_1644457020271563935[282] = 0;
   out_1644457020271563935[283] = 0;
   out_1644457020271563935[284] = 0;
   out_1644457020271563935[285] = 0;
   out_1644457020271563935[286] = 1;
   out_1644457020271563935[287] = 0;
   out_1644457020271563935[288] = 0;
   out_1644457020271563935[289] = 0;
   out_1644457020271563935[290] = 0;
   out_1644457020271563935[291] = 0;
   out_1644457020271563935[292] = 0;
   out_1644457020271563935[293] = 0;
   out_1644457020271563935[294] = 0;
   out_1644457020271563935[295] = 0;
   out_1644457020271563935[296] = 0;
   out_1644457020271563935[297] = 0;
   out_1644457020271563935[298] = 0;
   out_1644457020271563935[299] = 0;
   out_1644457020271563935[300] = 0;
   out_1644457020271563935[301] = 0;
   out_1644457020271563935[302] = 0;
   out_1644457020271563935[303] = 0;
   out_1644457020271563935[304] = 0;
   out_1644457020271563935[305] = 0;
   out_1644457020271563935[306] = 0;
   out_1644457020271563935[307] = 0;
   out_1644457020271563935[308] = 1;
   out_1644457020271563935[309] = 0;
   out_1644457020271563935[310] = 0;
   out_1644457020271563935[311] = 0;
   out_1644457020271563935[312] = 0;
   out_1644457020271563935[313] = 0;
   out_1644457020271563935[314] = 0;
   out_1644457020271563935[315] = 0;
   out_1644457020271563935[316] = 0;
   out_1644457020271563935[317] = 0;
   out_1644457020271563935[318] = 0;
   out_1644457020271563935[319] = 0;
   out_1644457020271563935[320] = 0;
   out_1644457020271563935[321] = 0;
   out_1644457020271563935[322] = 0;
   out_1644457020271563935[323] = 0;
   out_1644457020271563935[324] = 0;
   out_1644457020271563935[325] = 0;
   out_1644457020271563935[326] = 0;
   out_1644457020271563935[327] = 0;
   out_1644457020271563935[328] = 0;
   out_1644457020271563935[329] = 0;
   out_1644457020271563935[330] = 1;
   out_1644457020271563935[331] = 0;
   out_1644457020271563935[332] = 0;
   out_1644457020271563935[333] = 0;
   out_1644457020271563935[334] = 0;
   out_1644457020271563935[335] = 0;
   out_1644457020271563935[336] = 0;
   out_1644457020271563935[337] = 0;
   out_1644457020271563935[338] = 0;
   out_1644457020271563935[339] = 0;
   out_1644457020271563935[340] = 0;
   out_1644457020271563935[341] = 0;
   out_1644457020271563935[342] = 0;
   out_1644457020271563935[343] = 0;
   out_1644457020271563935[344] = 0;
   out_1644457020271563935[345] = 0;
   out_1644457020271563935[346] = 0;
   out_1644457020271563935[347] = 0;
   out_1644457020271563935[348] = 0;
   out_1644457020271563935[349] = 0;
   out_1644457020271563935[350] = 0;
   out_1644457020271563935[351] = 0;
   out_1644457020271563935[352] = 1;
   out_1644457020271563935[353] = 0;
   out_1644457020271563935[354] = 0;
   out_1644457020271563935[355] = 0;
   out_1644457020271563935[356] = 0;
   out_1644457020271563935[357] = 0;
   out_1644457020271563935[358] = 0;
   out_1644457020271563935[359] = 0;
   out_1644457020271563935[360] = 0;
   out_1644457020271563935[361] = 0;
   out_1644457020271563935[362] = 0;
   out_1644457020271563935[363] = 0;
   out_1644457020271563935[364] = 0;
   out_1644457020271563935[365] = 0;
   out_1644457020271563935[366] = 0;
   out_1644457020271563935[367] = 0;
   out_1644457020271563935[368] = 0;
   out_1644457020271563935[369] = 0;
   out_1644457020271563935[370] = 0;
   out_1644457020271563935[371] = 0;
   out_1644457020271563935[372] = 0;
   out_1644457020271563935[373] = 0;
   out_1644457020271563935[374] = 1;
   out_1644457020271563935[375] = 0;
   out_1644457020271563935[376] = 0;
   out_1644457020271563935[377] = 0;
   out_1644457020271563935[378] = 0;
   out_1644457020271563935[379] = 0;
   out_1644457020271563935[380] = 0;
   out_1644457020271563935[381] = 0;
   out_1644457020271563935[382] = 0;
   out_1644457020271563935[383] = 0;
   out_1644457020271563935[384] = 0;
   out_1644457020271563935[385] = 0;
   out_1644457020271563935[386] = 0;
   out_1644457020271563935[387] = 0;
   out_1644457020271563935[388] = 0;
   out_1644457020271563935[389] = 0;
   out_1644457020271563935[390] = 0;
   out_1644457020271563935[391] = 0;
   out_1644457020271563935[392] = 0;
   out_1644457020271563935[393] = 0;
   out_1644457020271563935[394] = 0;
   out_1644457020271563935[395] = 0;
   out_1644457020271563935[396] = 1;
   out_1644457020271563935[397] = 0;
   out_1644457020271563935[398] = 0;
   out_1644457020271563935[399] = 0;
   out_1644457020271563935[400] = 0;
   out_1644457020271563935[401] = 0;
   out_1644457020271563935[402] = 0;
   out_1644457020271563935[403] = 0;
   out_1644457020271563935[404] = 0;
   out_1644457020271563935[405] = 0;
   out_1644457020271563935[406] = 0;
   out_1644457020271563935[407] = 0;
   out_1644457020271563935[408] = 0;
   out_1644457020271563935[409] = 0;
   out_1644457020271563935[410] = 0;
   out_1644457020271563935[411] = 0;
   out_1644457020271563935[412] = 0;
   out_1644457020271563935[413] = 0;
   out_1644457020271563935[414] = 0;
   out_1644457020271563935[415] = 0;
   out_1644457020271563935[416] = 0;
   out_1644457020271563935[417] = 0;
   out_1644457020271563935[418] = 1;
   out_1644457020271563935[419] = 0;
   out_1644457020271563935[420] = 0;
   out_1644457020271563935[421] = 0;
   out_1644457020271563935[422] = 0;
   out_1644457020271563935[423] = 0;
   out_1644457020271563935[424] = 0;
   out_1644457020271563935[425] = 0;
   out_1644457020271563935[426] = 0;
   out_1644457020271563935[427] = 0;
   out_1644457020271563935[428] = 0;
   out_1644457020271563935[429] = 0;
   out_1644457020271563935[430] = 0;
   out_1644457020271563935[431] = 0;
   out_1644457020271563935[432] = 0;
   out_1644457020271563935[433] = 0;
   out_1644457020271563935[434] = 0;
   out_1644457020271563935[435] = 0;
   out_1644457020271563935[436] = 0;
   out_1644457020271563935[437] = 0;
   out_1644457020271563935[438] = 0;
   out_1644457020271563935[439] = 0;
   out_1644457020271563935[440] = 1;
}
void h_4(double *state, double *unused, double *out_8874573301421709056) {
   out_8874573301421709056[0] = state[10] + state[13];
   out_8874573301421709056[1] = state[11] + state[14];
   out_8874573301421709056[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1035369595663371810) {
   out_1035369595663371810[0] = 0;
   out_1035369595663371810[1] = 0;
   out_1035369595663371810[2] = 0;
   out_1035369595663371810[3] = 0;
   out_1035369595663371810[4] = 0;
   out_1035369595663371810[5] = 0;
   out_1035369595663371810[6] = 0;
   out_1035369595663371810[7] = 0;
   out_1035369595663371810[8] = 0;
   out_1035369595663371810[9] = 0;
   out_1035369595663371810[10] = 1;
   out_1035369595663371810[11] = 0;
   out_1035369595663371810[12] = 0;
   out_1035369595663371810[13] = 1;
   out_1035369595663371810[14] = 0;
   out_1035369595663371810[15] = 0;
   out_1035369595663371810[16] = 0;
   out_1035369595663371810[17] = 0;
   out_1035369595663371810[18] = 0;
   out_1035369595663371810[19] = 0;
   out_1035369595663371810[20] = 0;
   out_1035369595663371810[21] = 0;
   out_1035369595663371810[22] = 0;
   out_1035369595663371810[23] = 0;
   out_1035369595663371810[24] = 0;
   out_1035369595663371810[25] = 0;
   out_1035369595663371810[26] = 0;
   out_1035369595663371810[27] = 0;
   out_1035369595663371810[28] = 0;
   out_1035369595663371810[29] = 0;
   out_1035369595663371810[30] = 0;
   out_1035369595663371810[31] = 0;
   out_1035369595663371810[32] = 0;
   out_1035369595663371810[33] = 1;
   out_1035369595663371810[34] = 0;
   out_1035369595663371810[35] = 0;
   out_1035369595663371810[36] = 1;
   out_1035369595663371810[37] = 0;
   out_1035369595663371810[38] = 0;
   out_1035369595663371810[39] = 0;
   out_1035369595663371810[40] = 0;
   out_1035369595663371810[41] = 0;
   out_1035369595663371810[42] = 0;
   out_1035369595663371810[43] = 0;
   out_1035369595663371810[44] = 0;
   out_1035369595663371810[45] = 0;
   out_1035369595663371810[46] = 0;
   out_1035369595663371810[47] = 0;
   out_1035369595663371810[48] = 0;
   out_1035369595663371810[49] = 0;
   out_1035369595663371810[50] = 0;
   out_1035369595663371810[51] = 0;
   out_1035369595663371810[52] = 0;
   out_1035369595663371810[53] = 0;
   out_1035369595663371810[54] = 0;
   out_1035369595663371810[55] = 0;
   out_1035369595663371810[56] = 1;
   out_1035369595663371810[57] = 0;
   out_1035369595663371810[58] = 0;
   out_1035369595663371810[59] = 1;
   out_1035369595663371810[60] = 0;
   out_1035369595663371810[61] = 0;
   out_1035369595663371810[62] = 0;
   out_1035369595663371810[63] = 0;
   out_1035369595663371810[64] = 0;
   out_1035369595663371810[65] = 0;
}
void h_9(double *state, double *unused, double *out_6859767989661938166) {
   out_6859767989661938166[0] = state[10];
   out_6859767989661938166[1] = state[11];
   out_6859767989661938166[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8322588530927819280) {
   out_8322588530927819280[0] = 0;
   out_8322588530927819280[1] = 0;
   out_8322588530927819280[2] = 0;
   out_8322588530927819280[3] = 0;
   out_8322588530927819280[4] = 0;
   out_8322588530927819280[5] = 0;
   out_8322588530927819280[6] = 0;
   out_8322588530927819280[7] = 0;
   out_8322588530927819280[8] = 0;
   out_8322588530927819280[9] = 0;
   out_8322588530927819280[10] = 1;
   out_8322588530927819280[11] = 0;
   out_8322588530927819280[12] = 0;
   out_8322588530927819280[13] = 0;
   out_8322588530927819280[14] = 0;
   out_8322588530927819280[15] = 0;
   out_8322588530927819280[16] = 0;
   out_8322588530927819280[17] = 0;
   out_8322588530927819280[18] = 0;
   out_8322588530927819280[19] = 0;
   out_8322588530927819280[20] = 0;
   out_8322588530927819280[21] = 0;
   out_8322588530927819280[22] = 0;
   out_8322588530927819280[23] = 0;
   out_8322588530927819280[24] = 0;
   out_8322588530927819280[25] = 0;
   out_8322588530927819280[26] = 0;
   out_8322588530927819280[27] = 0;
   out_8322588530927819280[28] = 0;
   out_8322588530927819280[29] = 0;
   out_8322588530927819280[30] = 0;
   out_8322588530927819280[31] = 0;
   out_8322588530927819280[32] = 0;
   out_8322588530927819280[33] = 1;
   out_8322588530927819280[34] = 0;
   out_8322588530927819280[35] = 0;
   out_8322588530927819280[36] = 0;
   out_8322588530927819280[37] = 0;
   out_8322588530927819280[38] = 0;
   out_8322588530927819280[39] = 0;
   out_8322588530927819280[40] = 0;
   out_8322588530927819280[41] = 0;
   out_8322588530927819280[42] = 0;
   out_8322588530927819280[43] = 0;
   out_8322588530927819280[44] = 0;
   out_8322588530927819280[45] = 0;
   out_8322588530927819280[46] = 0;
   out_8322588530927819280[47] = 0;
   out_8322588530927819280[48] = 0;
   out_8322588530927819280[49] = 0;
   out_8322588530927819280[50] = 0;
   out_8322588530927819280[51] = 0;
   out_8322588530927819280[52] = 0;
   out_8322588530927819280[53] = 0;
   out_8322588530927819280[54] = 0;
   out_8322588530927819280[55] = 0;
   out_8322588530927819280[56] = 1;
   out_8322588530927819280[57] = 0;
   out_8322588530927819280[58] = 0;
   out_8322588530927819280[59] = 0;
   out_8322588530927819280[60] = 0;
   out_8322588530927819280[61] = 0;
   out_8322588530927819280[62] = 0;
   out_8322588530927819280[63] = 0;
   out_8322588530927819280[64] = 0;
   out_8322588530927819280[65] = 0;
}
void h_10(double *state, double *unused, double *out_3522379116783669364) {
   out_3522379116783669364[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3522379116783669364[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3522379116783669364[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8921858597104494624) {
   out_8921858597104494624[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8921858597104494624[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8921858597104494624[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8921858597104494624[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8921858597104494624[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8921858597104494624[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8921858597104494624[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8921858597104494624[7] = 0;
   out_8921858597104494624[8] = 0;
   out_8921858597104494624[9] = 0;
   out_8921858597104494624[10] = 0;
   out_8921858597104494624[11] = 0;
   out_8921858597104494624[12] = 0;
   out_8921858597104494624[13] = 0;
   out_8921858597104494624[14] = 0;
   out_8921858597104494624[15] = 0;
   out_8921858597104494624[16] = 1;
   out_8921858597104494624[17] = 0;
   out_8921858597104494624[18] = 0;
   out_8921858597104494624[19] = 1;
   out_8921858597104494624[20] = 0;
   out_8921858597104494624[21] = 0;
   out_8921858597104494624[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8921858597104494624[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8921858597104494624[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8921858597104494624[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8921858597104494624[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8921858597104494624[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8921858597104494624[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8921858597104494624[29] = 0;
   out_8921858597104494624[30] = 0;
   out_8921858597104494624[31] = 0;
   out_8921858597104494624[32] = 0;
   out_8921858597104494624[33] = 0;
   out_8921858597104494624[34] = 0;
   out_8921858597104494624[35] = 0;
   out_8921858597104494624[36] = 0;
   out_8921858597104494624[37] = 0;
   out_8921858597104494624[38] = 0;
   out_8921858597104494624[39] = 1;
   out_8921858597104494624[40] = 0;
   out_8921858597104494624[41] = 0;
   out_8921858597104494624[42] = 1;
   out_8921858597104494624[43] = 0;
   out_8921858597104494624[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8921858597104494624[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8921858597104494624[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8921858597104494624[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8921858597104494624[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8921858597104494624[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8921858597104494624[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8921858597104494624[51] = 0;
   out_8921858597104494624[52] = 0;
   out_8921858597104494624[53] = 0;
   out_8921858597104494624[54] = 0;
   out_8921858597104494624[55] = 0;
   out_8921858597104494624[56] = 0;
   out_8921858597104494624[57] = 0;
   out_8921858597104494624[58] = 0;
   out_8921858597104494624[59] = 0;
   out_8921858597104494624[60] = 0;
   out_8921858597104494624[61] = 0;
   out_8921858597104494624[62] = 1;
   out_8921858597104494624[63] = 0;
   out_8921858597104494624[64] = 0;
   out_8921858597104494624[65] = 1;
}
void h_12(double *state, double *unused, double *out_2753692107753195021) {
   out_2753692107753195021[0] = state[0];
   out_2753692107753195021[1] = state[1];
   out_2753692107753195021[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6054826003695333605) {
   out_6054826003695333605[0] = 1;
   out_6054826003695333605[1] = 0;
   out_6054826003695333605[2] = 0;
   out_6054826003695333605[3] = 0;
   out_6054826003695333605[4] = 0;
   out_6054826003695333605[5] = 0;
   out_6054826003695333605[6] = 0;
   out_6054826003695333605[7] = 0;
   out_6054826003695333605[8] = 0;
   out_6054826003695333605[9] = 0;
   out_6054826003695333605[10] = 0;
   out_6054826003695333605[11] = 0;
   out_6054826003695333605[12] = 0;
   out_6054826003695333605[13] = 0;
   out_6054826003695333605[14] = 0;
   out_6054826003695333605[15] = 0;
   out_6054826003695333605[16] = 0;
   out_6054826003695333605[17] = 0;
   out_6054826003695333605[18] = 0;
   out_6054826003695333605[19] = 0;
   out_6054826003695333605[20] = 0;
   out_6054826003695333605[21] = 0;
   out_6054826003695333605[22] = 0;
   out_6054826003695333605[23] = 1;
   out_6054826003695333605[24] = 0;
   out_6054826003695333605[25] = 0;
   out_6054826003695333605[26] = 0;
   out_6054826003695333605[27] = 0;
   out_6054826003695333605[28] = 0;
   out_6054826003695333605[29] = 0;
   out_6054826003695333605[30] = 0;
   out_6054826003695333605[31] = 0;
   out_6054826003695333605[32] = 0;
   out_6054826003695333605[33] = 0;
   out_6054826003695333605[34] = 0;
   out_6054826003695333605[35] = 0;
   out_6054826003695333605[36] = 0;
   out_6054826003695333605[37] = 0;
   out_6054826003695333605[38] = 0;
   out_6054826003695333605[39] = 0;
   out_6054826003695333605[40] = 0;
   out_6054826003695333605[41] = 0;
   out_6054826003695333605[42] = 0;
   out_6054826003695333605[43] = 0;
   out_6054826003695333605[44] = 0;
   out_6054826003695333605[45] = 0;
   out_6054826003695333605[46] = 1;
   out_6054826003695333605[47] = 0;
   out_6054826003695333605[48] = 0;
   out_6054826003695333605[49] = 0;
   out_6054826003695333605[50] = 0;
   out_6054826003695333605[51] = 0;
   out_6054826003695333605[52] = 0;
   out_6054826003695333605[53] = 0;
   out_6054826003695333605[54] = 0;
   out_6054826003695333605[55] = 0;
   out_6054826003695333605[56] = 0;
   out_6054826003695333605[57] = 0;
   out_6054826003695333605[58] = 0;
   out_6054826003695333605[59] = 0;
   out_6054826003695333605[60] = 0;
   out_6054826003695333605[61] = 0;
   out_6054826003695333605[62] = 0;
   out_6054826003695333605[63] = 0;
   out_6054826003695333605[64] = 0;
   out_6054826003695333605[65] = 0;
}
void h_35(double *state, double *unused, double *out_1753658750763024923) {
   out_1753658750763024923[0] = state[7];
   out_1753658750763024923[1] = state[8];
   out_1753658750763024923[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8800389036020347314) {
   out_8800389036020347314[0] = 0;
   out_8800389036020347314[1] = 0;
   out_8800389036020347314[2] = 0;
   out_8800389036020347314[3] = 0;
   out_8800389036020347314[4] = 0;
   out_8800389036020347314[5] = 0;
   out_8800389036020347314[6] = 0;
   out_8800389036020347314[7] = 1;
   out_8800389036020347314[8] = 0;
   out_8800389036020347314[9] = 0;
   out_8800389036020347314[10] = 0;
   out_8800389036020347314[11] = 0;
   out_8800389036020347314[12] = 0;
   out_8800389036020347314[13] = 0;
   out_8800389036020347314[14] = 0;
   out_8800389036020347314[15] = 0;
   out_8800389036020347314[16] = 0;
   out_8800389036020347314[17] = 0;
   out_8800389036020347314[18] = 0;
   out_8800389036020347314[19] = 0;
   out_8800389036020347314[20] = 0;
   out_8800389036020347314[21] = 0;
   out_8800389036020347314[22] = 0;
   out_8800389036020347314[23] = 0;
   out_8800389036020347314[24] = 0;
   out_8800389036020347314[25] = 0;
   out_8800389036020347314[26] = 0;
   out_8800389036020347314[27] = 0;
   out_8800389036020347314[28] = 0;
   out_8800389036020347314[29] = 0;
   out_8800389036020347314[30] = 1;
   out_8800389036020347314[31] = 0;
   out_8800389036020347314[32] = 0;
   out_8800389036020347314[33] = 0;
   out_8800389036020347314[34] = 0;
   out_8800389036020347314[35] = 0;
   out_8800389036020347314[36] = 0;
   out_8800389036020347314[37] = 0;
   out_8800389036020347314[38] = 0;
   out_8800389036020347314[39] = 0;
   out_8800389036020347314[40] = 0;
   out_8800389036020347314[41] = 0;
   out_8800389036020347314[42] = 0;
   out_8800389036020347314[43] = 0;
   out_8800389036020347314[44] = 0;
   out_8800389036020347314[45] = 0;
   out_8800389036020347314[46] = 0;
   out_8800389036020347314[47] = 0;
   out_8800389036020347314[48] = 0;
   out_8800389036020347314[49] = 0;
   out_8800389036020347314[50] = 0;
   out_8800389036020347314[51] = 0;
   out_8800389036020347314[52] = 0;
   out_8800389036020347314[53] = 1;
   out_8800389036020347314[54] = 0;
   out_8800389036020347314[55] = 0;
   out_8800389036020347314[56] = 0;
   out_8800389036020347314[57] = 0;
   out_8800389036020347314[58] = 0;
   out_8800389036020347314[59] = 0;
   out_8800389036020347314[60] = 0;
   out_8800389036020347314[61] = 0;
   out_8800389036020347314[62] = 0;
   out_8800389036020347314[63] = 0;
   out_8800389036020347314[64] = 0;
   out_8800389036020347314[65] = 0;
}
void h_32(double *state, double *unused, double *out_5727823348043794344) {
   out_5727823348043794344[0] = state[3];
   out_5727823348043794344[1] = state[4];
   out_5727823348043794344[2] = state[5];
   out_5727823348043794344[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4533196437976719655) {
   out_4533196437976719655[0] = 0;
   out_4533196437976719655[1] = 0;
   out_4533196437976719655[2] = 0;
   out_4533196437976719655[3] = 1;
   out_4533196437976719655[4] = 0;
   out_4533196437976719655[5] = 0;
   out_4533196437976719655[6] = 0;
   out_4533196437976719655[7] = 0;
   out_4533196437976719655[8] = 0;
   out_4533196437976719655[9] = 0;
   out_4533196437976719655[10] = 0;
   out_4533196437976719655[11] = 0;
   out_4533196437976719655[12] = 0;
   out_4533196437976719655[13] = 0;
   out_4533196437976719655[14] = 0;
   out_4533196437976719655[15] = 0;
   out_4533196437976719655[16] = 0;
   out_4533196437976719655[17] = 0;
   out_4533196437976719655[18] = 0;
   out_4533196437976719655[19] = 0;
   out_4533196437976719655[20] = 0;
   out_4533196437976719655[21] = 0;
   out_4533196437976719655[22] = 0;
   out_4533196437976719655[23] = 0;
   out_4533196437976719655[24] = 0;
   out_4533196437976719655[25] = 0;
   out_4533196437976719655[26] = 1;
   out_4533196437976719655[27] = 0;
   out_4533196437976719655[28] = 0;
   out_4533196437976719655[29] = 0;
   out_4533196437976719655[30] = 0;
   out_4533196437976719655[31] = 0;
   out_4533196437976719655[32] = 0;
   out_4533196437976719655[33] = 0;
   out_4533196437976719655[34] = 0;
   out_4533196437976719655[35] = 0;
   out_4533196437976719655[36] = 0;
   out_4533196437976719655[37] = 0;
   out_4533196437976719655[38] = 0;
   out_4533196437976719655[39] = 0;
   out_4533196437976719655[40] = 0;
   out_4533196437976719655[41] = 0;
   out_4533196437976719655[42] = 0;
   out_4533196437976719655[43] = 0;
   out_4533196437976719655[44] = 0;
   out_4533196437976719655[45] = 0;
   out_4533196437976719655[46] = 0;
   out_4533196437976719655[47] = 0;
   out_4533196437976719655[48] = 0;
   out_4533196437976719655[49] = 1;
   out_4533196437976719655[50] = 0;
   out_4533196437976719655[51] = 0;
   out_4533196437976719655[52] = 0;
   out_4533196437976719655[53] = 0;
   out_4533196437976719655[54] = 0;
   out_4533196437976719655[55] = 0;
   out_4533196437976719655[56] = 0;
   out_4533196437976719655[57] = 0;
   out_4533196437976719655[58] = 0;
   out_4533196437976719655[59] = 0;
   out_4533196437976719655[60] = 0;
   out_4533196437976719655[61] = 0;
   out_4533196437976719655[62] = 0;
   out_4533196437976719655[63] = 0;
   out_4533196437976719655[64] = 0;
   out_4533196437976719655[65] = 0;
   out_4533196437976719655[66] = 0;
   out_4533196437976719655[67] = 0;
   out_4533196437976719655[68] = 0;
   out_4533196437976719655[69] = 0;
   out_4533196437976719655[70] = 0;
   out_4533196437976719655[71] = 0;
   out_4533196437976719655[72] = 1;
   out_4533196437976719655[73] = 0;
   out_4533196437976719655[74] = 0;
   out_4533196437976719655[75] = 0;
   out_4533196437976719655[76] = 0;
   out_4533196437976719655[77] = 0;
   out_4533196437976719655[78] = 0;
   out_4533196437976719655[79] = 0;
   out_4533196437976719655[80] = 0;
   out_4533196437976719655[81] = 0;
   out_4533196437976719655[82] = 0;
   out_4533196437976719655[83] = 0;
   out_4533196437976719655[84] = 0;
   out_4533196437976719655[85] = 0;
   out_4533196437976719655[86] = 0;
   out_4533196437976719655[87] = 0;
}
void h_13(double *state, double *unused, double *out_3495741932579616235) {
   out_3495741932579616235[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3495741932579616235[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3495741932579616235[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7446734811616818018) {
   out_7446734811616818018[0] = 0;
   out_7446734811616818018[1] = 0;
   out_7446734811616818018[2] = 0;
   out_7446734811616818018[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7446734811616818018[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7446734811616818018[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7446734811616818018[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7446734811616818018[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7446734811616818018[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7446734811616818018[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7446734811616818018[10] = 0;
   out_7446734811616818018[11] = 0;
   out_7446734811616818018[12] = 0;
   out_7446734811616818018[13] = 0;
   out_7446734811616818018[14] = 0;
   out_7446734811616818018[15] = 0;
   out_7446734811616818018[16] = 0;
   out_7446734811616818018[17] = 0;
   out_7446734811616818018[18] = 0;
   out_7446734811616818018[19] = 0;
   out_7446734811616818018[20] = 0;
   out_7446734811616818018[21] = 0;
   out_7446734811616818018[22] = 0;
   out_7446734811616818018[23] = 0;
   out_7446734811616818018[24] = 0;
   out_7446734811616818018[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7446734811616818018[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7446734811616818018[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7446734811616818018[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7446734811616818018[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7446734811616818018[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7446734811616818018[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7446734811616818018[32] = 0;
   out_7446734811616818018[33] = 0;
   out_7446734811616818018[34] = 0;
   out_7446734811616818018[35] = 0;
   out_7446734811616818018[36] = 0;
   out_7446734811616818018[37] = 0;
   out_7446734811616818018[38] = 0;
   out_7446734811616818018[39] = 0;
   out_7446734811616818018[40] = 0;
   out_7446734811616818018[41] = 0;
   out_7446734811616818018[42] = 0;
   out_7446734811616818018[43] = 0;
   out_7446734811616818018[44] = 0;
   out_7446734811616818018[45] = 0;
   out_7446734811616818018[46] = 0;
   out_7446734811616818018[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7446734811616818018[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7446734811616818018[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7446734811616818018[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7446734811616818018[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7446734811616818018[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7446734811616818018[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7446734811616818018[54] = 0;
   out_7446734811616818018[55] = 0;
   out_7446734811616818018[56] = 0;
   out_7446734811616818018[57] = 0;
   out_7446734811616818018[58] = 0;
   out_7446734811616818018[59] = 0;
   out_7446734811616818018[60] = 0;
   out_7446734811616818018[61] = 0;
   out_7446734811616818018[62] = 0;
   out_7446734811616818018[63] = 0;
   out_7446734811616818018[64] = 0;
   out_7446734811616818018[65] = 0;
}
void h_14(double *state, double *unused, double *out_6859767989661938166) {
   out_6859767989661938166[0] = state[10];
   out_6859767989661938166[1] = state[11];
   out_6859767989661938166[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8322588530927819280) {
   out_8322588530927819280[0] = 0;
   out_8322588530927819280[1] = 0;
   out_8322588530927819280[2] = 0;
   out_8322588530927819280[3] = 0;
   out_8322588530927819280[4] = 0;
   out_8322588530927819280[5] = 0;
   out_8322588530927819280[6] = 0;
   out_8322588530927819280[7] = 0;
   out_8322588530927819280[8] = 0;
   out_8322588530927819280[9] = 0;
   out_8322588530927819280[10] = 1;
   out_8322588530927819280[11] = 0;
   out_8322588530927819280[12] = 0;
   out_8322588530927819280[13] = 0;
   out_8322588530927819280[14] = 0;
   out_8322588530927819280[15] = 0;
   out_8322588530927819280[16] = 0;
   out_8322588530927819280[17] = 0;
   out_8322588530927819280[18] = 0;
   out_8322588530927819280[19] = 0;
   out_8322588530927819280[20] = 0;
   out_8322588530927819280[21] = 0;
   out_8322588530927819280[22] = 0;
   out_8322588530927819280[23] = 0;
   out_8322588530927819280[24] = 0;
   out_8322588530927819280[25] = 0;
   out_8322588530927819280[26] = 0;
   out_8322588530927819280[27] = 0;
   out_8322588530927819280[28] = 0;
   out_8322588530927819280[29] = 0;
   out_8322588530927819280[30] = 0;
   out_8322588530927819280[31] = 0;
   out_8322588530927819280[32] = 0;
   out_8322588530927819280[33] = 1;
   out_8322588530927819280[34] = 0;
   out_8322588530927819280[35] = 0;
   out_8322588530927819280[36] = 0;
   out_8322588530927819280[37] = 0;
   out_8322588530927819280[38] = 0;
   out_8322588530927819280[39] = 0;
   out_8322588530927819280[40] = 0;
   out_8322588530927819280[41] = 0;
   out_8322588530927819280[42] = 0;
   out_8322588530927819280[43] = 0;
   out_8322588530927819280[44] = 0;
   out_8322588530927819280[45] = 0;
   out_8322588530927819280[46] = 0;
   out_8322588530927819280[47] = 0;
   out_8322588530927819280[48] = 0;
   out_8322588530927819280[49] = 0;
   out_8322588530927819280[50] = 0;
   out_8322588530927819280[51] = 0;
   out_8322588530927819280[52] = 0;
   out_8322588530927819280[53] = 0;
   out_8322588530927819280[54] = 0;
   out_8322588530927819280[55] = 0;
   out_8322588530927819280[56] = 1;
   out_8322588530927819280[57] = 0;
   out_8322588530927819280[58] = 0;
   out_8322588530927819280[59] = 0;
   out_8322588530927819280[60] = 0;
   out_8322588530927819280[61] = 0;
   out_8322588530927819280[62] = 0;
   out_8322588530927819280[63] = 0;
   out_8322588530927819280[64] = 0;
   out_8322588530927819280[65] = 0;
}
void h_33(double *state, double *unused, double *out_4144169622681746727) {
   out_4144169622681746727[0] = state[16];
   out_4144169622681746727[1] = state[17];
   out_4144169622681746727[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6495798033050346698) {
   out_6495798033050346698[0] = 0;
   out_6495798033050346698[1] = 0;
   out_6495798033050346698[2] = 0;
   out_6495798033050346698[3] = 0;
   out_6495798033050346698[4] = 0;
   out_6495798033050346698[5] = 0;
   out_6495798033050346698[6] = 0;
   out_6495798033050346698[7] = 0;
   out_6495798033050346698[8] = 0;
   out_6495798033050346698[9] = 0;
   out_6495798033050346698[10] = 0;
   out_6495798033050346698[11] = 0;
   out_6495798033050346698[12] = 0;
   out_6495798033050346698[13] = 0;
   out_6495798033050346698[14] = 0;
   out_6495798033050346698[15] = 0;
   out_6495798033050346698[16] = 1;
   out_6495798033050346698[17] = 0;
   out_6495798033050346698[18] = 0;
   out_6495798033050346698[19] = 0;
   out_6495798033050346698[20] = 0;
   out_6495798033050346698[21] = 0;
   out_6495798033050346698[22] = 0;
   out_6495798033050346698[23] = 0;
   out_6495798033050346698[24] = 0;
   out_6495798033050346698[25] = 0;
   out_6495798033050346698[26] = 0;
   out_6495798033050346698[27] = 0;
   out_6495798033050346698[28] = 0;
   out_6495798033050346698[29] = 0;
   out_6495798033050346698[30] = 0;
   out_6495798033050346698[31] = 0;
   out_6495798033050346698[32] = 0;
   out_6495798033050346698[33] = 0;
   out_6495798033050346698[34] = 0;
   out_6495798033050346698[35] = 0;
   out_6495798033050346698[36] = 0;
   out_6495798033050346698[37] = 0;
   out_6495798033050346698[38] = 0;
   out_6495798033050346698[39] = 1;
   out_6495798033050346698[40] = 0;
   out_6495798033050346698[41] = 0;
   out_6495798033050346698[42] = 0;
   out_6495798033050346698[43] = 0;
   out_6495798033050346698[44] = 0;
   out_6495798033050346698[45] = 0;
   out_6495798033050346698[46] = 0;
   out_6495798033050346698[47] = 0;
   out_6495798033050346698[48] = 0;
   out_6495798033050346698[49] = 0;
   out_6495798033050346698[50] = 0;
   out_6495798033050346698[51] = 0;
   out_6495798033050346698[52] = 0;
   out_6495798033050346698[53] = 0;
   out_6495798033050346698[54] = 0;
   out_6495798033050346698[55] = 0;
   out_6495798033050346698[56] = 0;
   out_6495798033050346698[57] = 0;
   out_6495798033050346698[58] = 0;
   out_6495798033050346698[59] = 0;
   out_6495798033050346698[60] = 0;
   out_6495798033050346698[61] = 0;
   out_6495798033050346698[62] = 1;
   out_6495798033050346698[63] = 0;
   out_6495798033050346698[64] = 0;
   out_6495798033050346698[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8762667531083925801) {
  H(in_vec, out_8762667531083925801);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2181421917658467336) {
  err_fun(nom_x, delta_x, out_2181421917658467336);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4232698826433939920) {
  inv_err_fun(nom_x, true_x, out_4232698826433939920);
}
void live_H_mod_fun(double *state, double *out_3067005223293357501) {
  H_mod_fun(state, out_3067005223293357501);
}
void live_f_fun(double *state, double dt, double *out_8579961002706476838) {
  f_fun(state,  dt, out_8579961002706476838);
}
void live_F_fun(double *state, double dt, double *out_1644457020271563935) {
  F_fun(state,  dt, out_1644457020271563935);
}
void live_h_4(double *state, double *unused, double *out_8874573301421709056) {
  h_4(state, unused, out_8874573301421709056);
}
void live_H_4(double *state, double *unused, double *out_1035369595663371810) {
  H_4(state, unused, out_1035369595663371810);
}
void live_h_9(double *state, double *unused, double *out_6859767989661938166) {
  h_9(state, unused, out_6859767989661938166);
}
void live_H_9(double *state, double *unused, double *out_8322588530927819280) {
  H_9(state, unused, out_8322588530927819280);
}
void live_h_10(double *state, double *unused, double *out_3522379116783669364) {
  h_10(state, unused, out_3522379116783669364);
}
void live_H_10(double *state, double *unused, double *out_8921858597104494624) {
  H_10(state, unused, out_8921858597104494624);
}
void live_h_12(double *state, double *unused, double *out_2753692107753195021) {
  h_12(state, unused, out_2753692107753195021);
}
void live_H_12(double *state, double *unused, double *out_6054826003695333605) {
  H_12(state, unused, out_6054826003695333605);
}
void live_h_35(double *state, double *unused, double *out_1753658750763024923) {
  h_35(state, unused, out_1753658750763024923);
}
void live_H_35(double *state, double *unused, double *out_8800389036020347314) {
  H_35(state, unused, out_8800389036020347314);
}
void live_h_32(double *state, double *unused, double *out_5727823348043794344) {
  h_32(state, unused, out_5727823348043794344);
}
void live_H_32(double *state, double *unused, double *out_4533196437976719655) {
  H_32(state, unused, out_4533196437976719655);
}
void live_h_13(double *state, double *unused, double *out_3495741932579616235) {
  h_13(state, unused, out_3495741932579616235);
}
void live_H_13(double *state, double *unused, double *out_7446734811616818018) {
  H_13(state, unused, out_7446734811616818018);
}
void live_h_14(double *state, double *unused, double *out_6859767989661938166) {
  h_14(state, unused, out_6859767989661938166);
}
void live_H_14(double *state, double *unused, double *out_8322588530927819280) {
  H_14(state, unused, out_8322588530927819280);
}
void live_h_33(double *state, double *unused, double *out_4144169622681746727) {
  h_33(state, unused, out_4144169622681746727);
}
void live_H_33(double *state, double *unused, double *out_6495798033050346698) {
  H_33(state, unused, out_6495798033050346698);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
