#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_209133747298070962) {
   out_209133747298070962[0] = 0;
   out_209133747298070962[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_209133747298070962[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_209133747298070962[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_209133747298070962[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_209133747298070962[5] = -sin(in_vec[1]);
   out_209133747298070962[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_209133747298070962[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_209133747298070962[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_209133747298070962[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_209133747298070962[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_209133747298070962[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_209133747298070962[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_209133747298070962[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_209133747298070962[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_209133747298070962[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_209133747298070962[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_209133747298070962[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1127464374514398162) {
   out_1127464374514398162[0] = delta_x[0] + nom_x[0];
   out_1127464374514398162[1] = delta_x[1] + nom_x[1];
   out_1127464374514398162[2] = delta_x[2] + nom_x[2];
   out_1127464374514398162[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1127464374514398162[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1127464374514398162[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1127464374514398162[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1127464374514398162[7] = delta_x[6] + nom_x[7];
   out_1127464374514398162[8] = delta_x[7] + nom_x[8];
   out_1127464374514398162[9] = delta_x[8] + nom_x[9];
   out_1127464374514398162[10] = delta_x[9] + nom_x[10];
   out_1127464374514398162[11] = delta_x[10] + nom_x[11];
   out_1127464374514398162[12] = delta_x[11] + nom_x[12];
   out_1127464374514398162[13] = delta_x[12] + nom_x[13];
   out_1127464374514398162[14] = delta_x[13] + nom_x[14];
   out_1127464374514398162[15] = delta_x[14] + nom_x[15];
   out_1127464374514398162[16] = delta_x[15] + nom_x[16];
   out_1127464374514398162[17] = delta_x[16] + nom_x[17];
   out_1127464374514398162[18] = delta_x[17] + nom_x[18];
   out_1127464374514398162[19] = delta_x[18] + nom_x[19];
   out_1127464374514398162[20] = delta_x[19] + nom_x[20];
   out_1127464374514398162[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8453671828857282665) {
   out_8453671828857282665[0] = -nom_x[0] + true_x[0];
   out_8453671828857282665[1] = -nom_x[1] + true_x[1];
   out_8453671828857282665[2] = -nom_x[2] + true_x[2];
   out_8453671828857282665[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8453671828857282665[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8453671828857282665[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8453671828857282665[6] = -nom_x[7] + true_x[7];
   out_8453671828857282665[7] = -nom_x[8] + true_x[8];
   out_8453671828857282665[8] = -nom_x[9] + true_x[9];
   out_8453671828857282665[9] = -nom_x[10] + true_x[10];
   out_8453671828857282665[10] = -nom_x[11] + true_x[11];
   out_8453671828857282665[11] = -nom_x[12] + true_x[12];
   out_8453671828857282665[12] = -nom_x[13] + true_x[13];
   out_8453671828857282665[13] = -nom_x[14] + true_x[14];
   out_8453671828857282665[14] = -nom_x[15] + true_x[15];
   out_8453671828857282665[15] = -nom_x[16] + true_x[16];
   out_8453671828857282665[16] = -nom_x[17] + true_x[17];
   out_8453671828857282665[17] = -nom_x[18] + true_x[18];
   out_8453671828857282665[18] = -nom_x[19] + true_x[19];
   out_8453671828857282665[19] = -nom_x[20] + true_x[20];
   out_8453671828857282665[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6465515215284678187) {
   out_6465515215284678187[0] = 1.0;
   out_6465515215284678187[1] = 0;
   out_6465515215284678187[2] = 0;
   out_6465515215284678187[3] = 0;
   out_6465515215284678187[4] = 0;
   out_6465515215284678187[5] = 0;
   out_6465515215284678187[6] = 0;
   out_6465515215284678187[7] = 0;
   out_6465515215284678187[8] = 0;
   out_6465515215284678187[9] = 0;
   out_6465515215284678187[10] = 0;
   out_6465515215284678187[11] = 0;
   out_6465515215284678187[12] = 0;
   out_6465515215284678187[13] = 0;
   out_6465515215284678187[14] = 0;
   out_6465515215284678187[15] = 0;
   out_6465515215284678187[16] = 0;
   out_6465515215284678187[17] = 0;
   out_6465515215284678187[18] = 0;
   out_6465515215284678187[19] = 0;
   out_6465515215284678187[20] = 0;
   out_6465515215284678187[21] = 0;
   out_6465515215284678187[22] = 1.0;
   out_6465515215284678187[23] = 0;
   out_6465515215284678187[24] = 0;
   out_6465515215284678187[25] = 0;
   out_6465515215284678187[26] = 0;
   out_6465515215284678187[27] = 0;
   out_6465515215284678187[28] = 0;
   out_6465515215284678187[29] = 0;
   out_6465515215284678187[30] = 0;
   out_6465515215284678187[31] = 0;
   out_6465515215284678187[32] = 0;
   out_6465515215284678187[33] = 0;
   out_6465515215284678187[34] = 0;
   out_6465515215284678187[35] = 0;
   out_6465515215284678187[36] = 0;
   out_6465515215284678187[37] = 0;
   out_6465515215284678187[38] = 0;
   out_6465515215284678187[39] = 0;
   out_6465515215284678187[40] = 0;
   out_6465515215284678187[41] = 0;
   out_6465515215284678187[42] = 0;
   out_6465515215284678187[43] = 0;
   out_6465515215284678187[44] = 1.0;
   out_6465515215284678187[45] = 0;
   out_6465515215284678187[46] = 0;
   out_6465515215284678187[47] = 0;
   out_6465515215284678187[48] = 0;
   out_6465515215284678187[49] = 0;
   out_6465515215284678187[50] = 0;
   out_6465515215284678187[51] = 0;
   out_6465515215284678187[52] = 0;
   out_6465515215284678187[53] = 0;
   out_6465515215284678187[54] = 0;
   out_6465515215284678187[55] = 0;
   out_6465515215284678187[56] = 0;
   out_6465515215284678187[57] = 0;
   out_6465515215284678187[58] = 0;
   out_6465515215284678187[59] = 0;
   out_6465515215284678187[60] = 0;
   out_6465515215284678187[61] = 0;
   out_6465515215284678187[62] = 0;
   out_6465515215284678187[63] = 0;
   out_6465515215284678187[64] = 0;
   out_6465515215284678187[65] = 0;
   out_6465515215284678187[66] = -0.5*state[4];
   out_6465515215284678187[67] = -0.5*state[5];
   out_6465515215284678187[68] = -0.5*state[6];
   out_6465515215284678187[69] = 0;
   out_6465515215284678187[70] = 0;
   out_6465515215284678187[71] = 0;
   out_6465515215284678187[72] = 0;
   out_6465515215284678187[73] = 0;
   out_6465515215284678187[74] = 0;
   out_6465515215284678187[75] = 0;
   out_6465515215284678187[76] = 0;
   out_6465515215284678187[77] = 0;
   out_6465515215284678187[78] = 0;
   out_6465515215284678187[79] = 0;
   out_6465515215284678187[80] = 0;
   out_6465515215284678187[81] = 0;
   out_6465515215284678187[82] = 0;
   out_6465515215284678187[83] = 0;
   out_6465515215284678187[84] = 0;
   out_6465515215284678187[85] = 0;
   out_6465515215284678187[86] = 0;
   out_6465515215284678187[87] = 0.5*state[3];
   out_6465515215284678187[88] = 0.5*state[6];
   out_6465515215284678187[89] = -0.5*state[5];
   out_6465515215284678187[90] = 0;
   out_6465515215284678187[91] = 0;
   out_6465515215284678187[92] = 0;
   out_6465515215284678187[93] = 0;
   out_6465515215284678187[94] = 0;
   out_6465515215284678187[95] = 0;
   out_6465515215284678187[96] = 0;
   out_6465515215284678187[97] = 0;
   out_6465515215284678187[98] = 0;
   out_6465515215284678187[99] = 0;
   out_6465515215284678187[100] = 0;
   out_6465515215284678187[101] = 0;
   out_6465515215284678187[102] = 0;
   out_6465515215284678187[103] = 0;
   out_6465515215284678187[104] = 0;
   out_6465515215284678187[105] = 0;
   out_6465515215284678187[106] = 0;
   out_6465515215284678187[107] = 0;
   out_6465515215284678187[108] = -0.5*state[6];
   out_6465515215284678187[109] = 0.5*state[3];
   out_6465515215284678187[110] = 0.5*state[4];
   out_6465515215284678187[111] = 0;
   out_6465515215284678187[112] = 0;
   out_6465515215284678187[113] = 0;
   out_6465515215284678187[114] = 0;
   out_6465515215284678187[115] = 0;
   out_6465515215284678187[116] = 0;
   out_6465515215284678187[117] = 0;
   out_6465515215284678187[118] = 0;
   out_6465515215284678187[119] = 0;
   out_6465515215284678187[120] = 0;
   out_6465515215284678187[121] = 0;
   out_6465515215284678187[122] = 0;
   out_6465515215284678187[123] = 0;
   out_6465515215284678187[124] = 0;
   out_6465515215284678187[125] = 0;
   out_6465515215284678187[126] = 0;
   out_6465515215284678187[127] = 0;
   out_6465515215284678187[128] = 0;
   out_6465515215284678187[129] = 0.5*state[5];
   out_6465515215284678187[130] = -0.5*state[4];
   out_6465515215284678187[131] = 0.5*state[3];
   out_6465515215284678187[132] = 0;
   out_6465515215284678187[133] = 0;
   out_6465515215284678187[134] = 0;
   out_6465515215284678187[135] = 0;
   out_6465515215284678187[136] = 0;
   out_6465515215284678187[137] = 0;
   out_6465515215284678187[138] = 0;
   out_6465515215284678187[139] = 0;
   out_6465515215284678187[140] = 0;
   out_6465515215284678187[141] = 0;
   out_6465515215284678187[142] = 0;
   out_6465515215284678187[143] = 0;
   out_6465515215284678187[144] = 0;
   out_6465515215284678187[145] = 0;
   out_6465515215284678187[146] = 0;
   out_6465515215284678187[147] = 0;
   out_6465515215284678187[148] = 0;
   out_6465515215284678187[149] = 0;
   out_6465515215284678187[150] = 0;
   out_6465515215284678187[151] = 0;
   out_6465515215284678187[152] = 0;
   out_6465515215284678187[153] = 1.0;
   out_6465515215284678187[154] = 0;
   out_6465515215284678187[155] = 0;
   out_6465515215284678187[156] = 0;
   out_6465515215284678187[157] = 0;
   out_6465515215284678187[158] = 0;
   out_6465515215284678187[159] = 0;
   out_6465515215284678187[160] = 0;
   out_6465515215284678187[161] = 0;
   out_6465515215284678187[162] = 0;
   out_6465515215284678187[163] = 0;
   out_6465515215284678187[164] = 0;
   out_6465515215284678187[165] = 0;
   out_6465515215284678187[166] = 0;
   out_6465515215284678187[167] = 0;
   out_6465515215284678187[168] = 0;
   out_6465515215284678187[169] = 0;
   out_6465515215284678187[170] = 0;
   out_6465515215284678187[171] = 0;
   out_6465515215284678187[172] = 0;
   out_6465515215284678187[173] = 0;
   out_6465515215284678187[174] = 0;
   out_6465515215284678187[175] = 1.0;
   out_6465515215284678187[176] = 0;
   out_6465515215284678187[177] = 0;
   out_6465515215284678187[178] = 0;
   out_6465515215284678187[179] = 0;
   out_6465515215284678187[180] = 0;
   out_6465515215284678187[181] = 0;
   out_6465515215284678187[182] = 0;
   out_6465515215284678187[183] = 0;
   out_6465515215284678187[184] = 0;
   out_6465515215284678187[185] = 0;
   out_6465515215284678187[186] = 0;
   out_6465515215284678187[187] = 0;
   out_6465515215284678187[188] = 0;
   out_6465515215284678187[189] = 0;
   out_6465515215284678187[190] = 0;
   out_6465515215284678187[191] = 0;
   out_6465515215284678187[192] = 0;
   out_6465515215284678187[193] = 0;
   out_6465515215284678187[194] = 0;
   out_6465515215284678187[195] = 0;
   out_6465515215284678187[196] = 0;
   out_6465515215284678187[197] = 1.0;
   out_6465515215284678187[198] = 0;
   out_6465515215284678187[199] = 0;
   out_6465515215284678187[200] = 0;
   out_6465515215284678187[201] = 0;
   out_6465515215284678187[202] = 0;
   out_6465515215284678187[203] = 0;
   out_6465515215284678187[204] = 0;
   out_6465515215284678187[205] = 0;
   out_6465515215284678187[206] = 0;
   out_6465515215284678187[207] = 0;
   out_6465515215284678187[208] = 0;
   out_6465515215284678187[209] = 0;
   out_6465515215284678187[210] = 0;
   out_6465515215284678187[211] = 0;
   out_6465515215284678187[212] = 0;
   out_6465515215284678187[213] = 0;
   out_6465515215284678187[214] = 0;
   out_6465515215284678187[215] = 0;
   out_6465515215284678187[216] = 0;
   out_6465515215284678187[217] = 0;
   out_6465515215284678187[218] = 0;
   out_6465515215284678187[219] = 1.0;
   out_6465515215284678187[220] = 0;
   out_6465515215284678187[221] = 0;
   out_6465515215284678187[222] = 0;
   out_6465515215284678187[223] = 0;
   out_6465515215284678187[224] = 0;
   out_6465515215284678187[225] = 0;
   out_6465515215284678187[226] = 0;
   out_6465515215284678187[227] = 0;
   out_6465515215284678187[228] = 0;
   out_6465515215284678187[229] = 0;
   out_6465515215284678187[230] = 0;
   out_6465515215284678187[231] = 0;
   out_6465515215284678187[232] = 0;
   out_6465515215284678187[233] = 0;
   out_6465515215284678187[234] = 0;
   out_6465515215284678187[235] = 0;
   out_6465515215284678187[236] = 0;
   out_6465515215284678187[237] = 0;
   out_6465515215284678187[238] = 0;
   out_6465515215284678187[239] = 0;
   out_6465515215284678187[240] = 0;
   out_6465515215284678187[241] = 1.0;
   out_6465515215284678187[242] = 0;
   out_6465515215284678187[243] = 0;
   out_6465515215284678187[244] = 0;
   out_6465515215284678187[245] = 0;
   out_6465515215284678187[246] = 0;
   out_6465515215284678187[247] = 0;
   out_6465515215284678187[248] = 0;
   out_6465515215284678187[249] = 0;
   out_6465515215284678187[250] = 0;
   out_6465515215284678187[251] = 0;
   out_6465515215284678187[252] = 0;
   out_6465515215284678187[253] = 0;
   out_6465515215284678187[254] = 0;
   out_6465515215284678187[255] = 0;
   out_6465515215284678187[256] = 0;
   out_6465515215284678187[257] = 0;
   out_6465515215284678187[258] = 0;
   out_6465515215284678187[259] = 0;
   out_6465515215284678187[260] = 0;
   out_6465515215284678187[261] = 0;
   out_6465515215284678187[262] = 0;
   out_6465515215284678187[263] = 1.0;
   out_6465515215284678187[264] = 0;
   out_6465515215284678187[265] = 0;
   out_6465515215284678187[266] = 0;
   out_6465515215284678187[267] = 0;
   out_6465515215284678187[268] = 0;
   out_6465515215284678187[269] = 0;
   out_6465515215284678187[270] = 0;
   out_6465515215284678187[271] = 0;
   out_6465515215284678187[272] = 0;
   out_6465515215284678187[273] = 0;
   out_6465515215284678187[274] = 0;
   out_6465515215284678187[275] = 0;
   out_6465515215284678187[276] = 0;
   out_6465515215284678187[277] = 0;
   out_6465515215284678187[278] = 0;
   out_6465515215284678187[279] = 0;
   out_6465515215284678187[280] = 0;
   out_6465515215284678187[281] = 0;
   out_6465515215284678187[282] = 0;
   out_6465515215284678187[283] = 0;
   out_6465515215284678187[284] = 0;
   out_6465515215284678187[285] = 1.0;
   out_6465515215284678187[286] = 0;
   out_6465515215284678187[287] = 0;
   out_6465515215284678187[288] = 0;
   out_6465515215284678187[289] = 0;
   out_6465515215284678187[290] = 0;
   out_6465515215284678187[291] = 0;
   out_6465515215284678187[292] = 0;
   out_6465515215284678187[293] = 0;
   out_6465515215284678187[294] = 0;
   out_6465515215284678187[295] = 0;
   out_6465515215284678187[296] = 0;
   out_6465515215284678187[297] = 0;
   out_6465515215284678187[298] = 0;
   out_6465515215284678187[299] = 0;
   out_6465515215284678187[300] = 0;
   out_6465515215284678187[301] = 0;
   out_6465515215284678187[302] = 0;
   out_6465515215284678187[303] = 0;
   out_6465515215284678187[304] = 0;
   out_6465515215284678187[305] = 0;
   out_6465515215284678187[306] = 0;
   out_6465515215284678187[307] = 1.0;
   out_6465515215284678187[308] = 0;
   out_6465515215284678187[309] = 0;
   out_6465515215284678187[310] = 0;
   out_6465515215284678187[311] = 0;
   out_6465515215284678187[312] = 0;
   out_6465515215284678187[313] = 0;
   out_6465515215284678187[314] = 0;
   out_6465515215284678187[315] = 0;
   out_6465515215284678187[316] = 0;
   out_6465515215284678187[317] = 0;
   out_6465515215284678187[318] = 0;
   out_6465515215284678187[319] = 0;
   out_6465515215284678187[320] = 0;
   out_6465515215284678187[321] = 0;
   out_6465515215284678187[322] = 0;
   out_6465515215284678187[323] = 0;
   out_6465515215284678187[324] = 0;
   out_6465515215284678187[325] = 0;
   out_6465515215284678187[326] = 0;
   out_6465515215284678187[327] = 0;
   out_6465515215284678187[328] = 0;
   out_6465515215284678187[329] = 1.0;
   out_6465515215284678187[330] = 0;
   out_6465515215284678187[331] = 0;
   out_6465515215284678187[332] = 0;
   out_6465515215284678187[333] = 0;
   out_6465515215284678187[334] = 0;
   out_6465515215284678187[335] = 0;
   out_6465515215284678187[336] = 0;
   out_6465515215284678187[337] = 0;
   out_6465515215284678187[338] = 0;
   out_6465515215284678187[339] = 0;
   out_6465515215284678187[340] = 0;
   out_6465515215284678187[341] = 0;
   out_6465515215284678187[342] = 0;
   out_6465515215284678187[343] = 0;
   out_6465515215284678187[344] = 0;
   out_6465515215284678187[345] = 0;
   out_6465515215284678187[346] = 0;
   out_6465515215284678187[347] = 0;
   out_6465515215284678187[348] = 0;
   out_6465515215284678187[349] = 0;
   out_6465515215284678187[350] = 0;
   out_6465515215284678187[351] = 1.0;
   out_6465515215284678187[352] = 0;
   out_6465515215284678187[353] = 0;
   out_6465515215284678187[354] = 0;
   out_6465515215284678187[355] = 0;
   out_6465515215284678187[356] = 0;
   out_6465515215284678187[357] = 0;
   out_6465515215284678187[358] = 0;
   out_6465515215284678187[359] = 0;
   out_6465515215284678187[360] = 0;
   out_6465515215284678187[361] = 0;
   out_6465515215284678187[362] = 0;
   out_6465515215284678187[363] = 0;
   out_6465515215284678187[364] = 0;
   out_6465515215284678187[365] = 0;
   out_6465515215284678187[366] = 0;
   out_6465515215284678187[367] = 0;
   out_6465515215284678187[368] = 0;
   out_6465515215284678187[369] = 0;
   out_6465515215284678187[370] = 0;
   out_6465515215284678187[371] = 0;
   out_6465515215284678187[372] = 0;
   out_6465515215284678187[373] = 1.0;
   out_6465515215284678187[374] = 0;
   out_6465515215284678187[375] = 0;
   out_6465515215284678187[376] = 0;
   out_6465515215284678187[377] = 0;
   out_6465515215284678187[378] = 0;
   out_6465515215284678187[379] = 0;
   out_6465515215284678187[380] = 0;
   out_6465515215284678187[381] = 0;
   out_6465515215284678187[382] = 0;
   out_6465515215284678187[383] = 0;
   out_6465515215284678187[384] = 0;
   out_6465515215284678187[385] = 0;
   out_6465515215284678187[386] = 0;
   out_6465515215284678187[387] = 0;
   out_6465515215284678187[388] = 0;
   out_6465515215284678187[389] = 0;
   out_6465515215284678187[390] = 0;
   out_6465515215284678187[391] = 0;
   out_6465515215284678187[392] = 0;
   out_6465515215284678187[393] = 0;
   out_6465515215284678187[394] = 0;
   out_6465515215284678187[395] = 1.0;
   out_6465515215284678187[396] = 0;
   out_6465515215284678187[397] = 0;
   out_6465515215284678187[398] = 0;
   out_6465515215284678187[399] = 0;
   out_6465515215284678187[400] = 0;
   out_6465515215284678187[401] = 0;
   out_6465515215284678187[402] = 0;
   out_6465515215284678187[403] = 0;
   out_6465515215284678187[404] = 0;
   out_6465515215284678187[405] = 0;
   out_6465515215284678187[406] = 0;
   out_6465515215284678187[407] = 0;
   out_6465515215284678187[408] = 0;
   out_6465515215284678187[409] = 0;
   out_6465515215284678187[410] = 0;
   out_6465515215284678187[411] = 0;
   out_6465515215284678187[412] = 0;
   out_6465515215284678187[413] = 0;
   out_6465515215284678187[414] = 0;
   out_6465515215284678187[415] = 0;
   out_6465515215284678187[416] = 0;
   out_6465515215284678187[417] = 1.0;
   out_6465515215284678187[418] = 0;
   out_6465515215284678187[419] = 0;
   out_6465515215284678187[420] = 0;
   out_6465515215284678187[421] = 0;
   out_6465515215284678187[422] = 0;
   out_6465515215284678187[423] = 0;
   out_6465515215284678187[424] = 0;
   out_6465515215284678187[425] = 0;
   out_6465515215284678187[426] = 0;
   out_6465515215284678187[427] = 0;
   out_6465515215284678187[428] = 0;
   out_6465515215284678187[429] = 0;
   out_6465515215284678187[430] = 0;
   out_6465515215284678187[431] = 0;
   out_6465515215284678187[432] = 0;
   out_6465515215284678187[433] = 0;
   out_6465515215284678187[434] = 0;
   out_6465515215284678187[435] = 0;
   out_6465515215284678187[436] = 0;
   out_6465515215284678187[437] = 0;
   out_6465515215284678187[438] = 0;
   out_6465515215284678187[439] = 1.0;
   out_6465515215284678187[440] = 0;
   out_6465515215284678187[441] = 0;
   out_6465515215284678187[442] = 0;
   out_6465515215284678187[443] = 0;
   out_6465515215284678187[444] = 0;
   out_6465515215284678187[445] = 0;
   out_6465515215284678187[446] = 0;
   out_6465515215284678187[447] = 0;
   out_6465515215284678187[448] = 0;
   out_6465515215284678187[449] = 0;
   out_6465515215284678187[450] = 0;
   out_6465515215284678187[451] = 0;
   out_6465515215284678187[452] = 0;
   out_6465515215284678187[453] = 0;
   out_6465515215284678187[454] = 0;
   out_6465515215284678187[455] = 0;
   out_6465515215284678187[456] = 0;
   out_6465515215284678187[457] = 0;
   out_6465515215284678187[458] = 0;
   out_6465515215284678187[459] = 0;
   out_6465515215284678187[460] = 0;
   out_6465515215284678187[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5601687001448067779) {
   out_5601687001448067779[0] = dt*state[7] + state[0];
   out_5601687001448067779[1] = dt*state[8] + state[1];
   out_5601687001448067779[2] = dt*state[9] + state[2];
   out_5601687001448067779[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5601687001448067779[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5601687001448067779[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5601687001448067779[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5601687001448067779[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5601687001448067779[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5601687001448067779[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5601687001448067779[10] = state[10];
   out_5601687001448067779[11] = state[11];
   out_5601687001448067779[12] = state[12];
   out_5601687001448067779[13] = state[13];
   out_5601687001448067779[14] = state[14];
   out_5601687001448067779[15] = state[15];
   out_5601687001448067779[16] = state[16];
   out_5601687001448067779[17] = state[17];
   out_5601687001448067779[18] = state[18];
   out_5601687001448067779[19] = state[19];
   out_5601687001448067779[20] = state[20];
   out_5601687001448067779[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3647176865632245870) {
   out_3647176865632245870[0] = 1;
   out_3647176865632245870[1] = 0;
   out_3647176865632245870[2] = 0;
   out_3647176865632245870[3] = 0;
   out_3647176865632245870[4] = 0;
   out_3647176865632245870[5] = 0;
   out_3647176865632245870[6] = dt;
   out_3647176865632245870[7] = 0;
   out_3647176865632245870[8] = 0;
   out_3647176865632245870[9] = 0;
   out_3647176865632245870[10] = 0;
   out_3647176865632245870[11] = 0;
   out_3647176865632245870[12] = 0;
   out_3647176865632245870[13] = 0;
   out_3647176865632245870[14] = 0;
   out_3647176865632245870[15] = 0;
   out_3647176865632245870[16] = 0;
   out_3647176865632245870[17] = 0;
   out_3647176865632245870[18] = 0;
   out_3647176865632245870[19] = 0;
   out_3647176865632245870[20] = 0;
   out_3647176865632245870[21] = 0;
   out_3647176865632245870[22] = 1;
   out_3647176865632245870[23] = 0;
   out_3647176865632245870[24] = 0;
   out_3647176865632245870[25] = 0;
   out_3647176865632245870[26] = 0;
   out_3647176865632245870[27] = 0;
   out_3647176865632245870[28] = dt;
   out_3647176865632245870[29] = 0;
   out_3647176865632245870[30] = 0;
   out_3647176865632245870[31] = 0;
   out_3647176865632245870[32] = 0;
   out_3647176865632245870[33] = 0;
   out_3647176865632245870[34] = 0;
   out_3647176865632245870[35] = 0;
   out_3647176865632245870[36] = 0;
   out_3647176865632245870[37] = 0;
   out_3647176865632245870[38] = 0;
   out_3647176865632245870[39] = 0;
   out_3647176865632245870[40] = 0;
   out_3647176865632245870[41] = 0;
   out_3647176865632245870[42] = 0;
   out_3647176865632245870[43] = 0;
   out_3647176865632245870[44] = 1;
   out_3647176865632245870[45] = 0;
   out_3647176865632245870[46] = 0;
   out_3647176865632245870[47] = 0;
   out_3647176865632245870[48] = 0;
   out_3647176865632245870[49] = 0;
   out_3647176865632245870[50] = dt;
   out_3647176865632245870[51] = 0;
   out_3647176865632245870[52] = 0;
   out_3647176865632245870[53] = 0;
   out_3647176865632245870[54] = 0;
   out_3647176865632245870[55] = 0;
   out_3647176865632245870[56] = 0;
   out_3647176865632245870[57] = 0;
   out_3647176865632245870[58] = 0;
   out_3647176865632245870[59] = 0;
   out_3647176865632245870[60] = 0;
   out_3647176865632245870[61] = 0;
   out_3647176865632245870[62] = 0;
   out_3647176865632245870[63] = 0;
   out_3647176865632245870[64] = 0;
   out_3647176865632245870[65] = 0;
   out_3647176865632245870[66] = 1;
   out_3647176865632245870[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3647176865632245870[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3647176865632245870[69] = 0;
   out_3647176865632245870[70] = 0;
   out_3647176865632245870[71] = 0;
   out_3647176865632245870[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3647176865632245870[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3647176865632245870[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3647176865632245870[75] = 0;
   out_3647176865632245870[76] = 0;
   out_3647176865632245870[77] = 0;
   out_3647176865632245870[78] = 0;
   out_3647176865632245870[79] = 0;
   out_3647176865632245870[80] = 0;
   out_3647176865632245870[81] = 0;
   out_3647176865632245870[82] = 0;
   out_3647176865632245870[83] = 0;
   out_3647176865632245870[84] = 0;
   out_3647176865632245870[85] = 0;
   out_3647176865632245870[86] = 0;
   out_3647176865632245870[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3647176865632245870[88] = 1;
   out_3647176865632245870[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3647176865632245870[90] = 0;
   out_3647176865632245870[91] = 0;
   out_3647176865632245870[92] = 0;
   out_3647176865632245870[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3647176865632245870[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3647176865632245870[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3647176865632245870[96] = 0;
   out_3647176865632245870[97] = 0;
   out_3647176865632245870[98] = 0;
   out_3647176865632245870[99] = 0;
   out_3647176865632245870[100] = 0;
   out_3647176865632245870[101] = 0;
   out_3647176865632245870[102] = 0;
   out_3647176865632245870[103] = 0;
   out_3647176865632245870[104] = 0;
   out_3647176865632245870[105] = 0;
   out_3647176865632245870[106] = 0;
   out_3647176865632245870[107] = 0;
   out_3647176865632245870[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3647176865632245870[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3647176865632245870[110] = 1;
   out_3647176865632245870[111] = 0;
   out_3647176865632245870[112] = 0;
   out_3647176865632245870[113] = 0;
   out_3647176865632245870[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3647176865632245870[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3647176865632245870[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3647176865632245870[117] = 0;
   out_3647176865632245870[118] = 0;
   out_3647176865632245870[119] = 0;
   out_3647176865632245870[120] = 0;
   out_3647176865632245870[121] = 0;
   out_3647176865632245870[122] = 0;
   out_3647176865632245870[123] = 0;
   out_3647176865632245870[124] = 0;
   out_3647176865632245870[125] = 0;
   out_3647176865632245870[126] = 0;
   out_3647176865632245870[127] = 0;
   out_3647176865632245870[128] = 0;
   out_3647176865632245870[129] = 0;
   out_3647176865632245870[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3647176865632245870[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3647176865632245870[132] = 1;
   out_3647176865632245870[133] = 0;
   out_3647176865632245870[134] = 0;
   out_3647176865632245870[135] = 0;
   out_3647176865632245870[136] = 0;
   out_3647176865632245870[137] = 0;
   out_3647176865632245870[138] = 0;
   out_3647176865632245870[139] = 0;
   out_3647176865632245870[140] = 0;
   out_3647176865632245870[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3647176865632245870[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3647176865632245870[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3647176865632245870[144] = 0;
   out_3647176865632245870[145] = 0;
   out_3647176865632245870[146] = 0;
   out_3647176865632245870[147] = 0;
   out_3647176865632245870[148] = 0;
   out_3647176865632245870[149] = 0;
   out_3647176865632245870[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3647176865632245870[151] = 0;
   out_3647176865632245870[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3647176865632245870[153] = 0;
   out_3647176865632245870[154] = 1;
   out_3647176865632245870[155] = 0;
   out_3647176865632245870[156] = 0;
   out_3647176865632245870[157] = 0;
   out_3647176865632245870[158] = 0;
   out_3647176865632245870[159] = 0;
   out_3647176865632245870[160] = 0;
   out_3647176865632245870[161] = 0;
   out_3647176865632245870[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3647176865632245870[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3647176865632245870[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3647176865632245870[165] = 0;
   out_3647176865632245870[166] = 0;
   out_3647176865632245870[167] = 0;
   out_3647176865632245870[168] = 0;
   out_3647176865632245870[169] = 0;
   out_3647176865632245870[170] = 0;
   out_3647176865632245870[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3647176865632245870[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3647176865632245870[173] = 0;
   out_3647176865632245870[174] = 0;
   out_3647176865632245870[175] = 0;
   out_3647176865632245870[176] = 1;
   out_3647176865632245870[177] = 0;
   out_3647176865632245870[178] = 0;
   out_3647176865632245870[179] = 0;
   out_3647176865632245870[180] = 0;
   out_3647176865632245870[181] = 0;
   out_3647176865632245870[182] = 0;
   out_3647176865632245870[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3647176865632245870[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3647176865632245870[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3647176865632245870[186] = 0;
   out_3647176865632245870[187] = 0;
   out_3647176865632245870[188] = 0;
   out_3647176865632245870[189] = 0;
   out_3647176865632245870[190] = 0;
   out_3647176865632245870[191] = 0;
   out_3647176865632245870[192] = 0;
   out_3647176865632245870[193] = 0;
   out_3647176865632245870[194] = 0;
   out_3647176865632245870[195] = 0;
   out_3647176865632245870[196] = 0;
   out_3647176865632245870[197] = 0;
   out_3647176865632245870[198] = 1;
   out_3647176865632245870[199] = 0;
   out_3647176865632245870[200] = 0;
   out_3647176865632245870[201] = 0;
   out_3647176865632245870[202] = 0;
   out_3647176865632245870[203] = 0;
   out_3647176865632245870[204] = 0;
   out_3647176865632245870[205] = 0;
   out_3647176865632245870[206] = 0;
   out_3647176865632245870[207] = 0;
   out_3647176865632245870[208] = 0;
   out_3647176865632245870[209] = 0;
   out_3647176865632245870[210] = 0;
   out_3647176865632245870[211] = 0;
   out_3647176865632245870[212] = 0;
   out_3647176865632245870[213] = 0;
   out_3647176865632245870[214] = 0;
   out_3647176865632245870[215] = 0;
   out_3647176865632245870[216] = 0;
   out_3647176865632245870[217] = 0;
   out_3647176865632245870[218] = 0;
   out_3647176865632245870[219] = 0;
   out_3647176865632245870[220] = 1;
   out_3647176865632245870[221] = 0;
   out_3647176865632245870[222] = 0;
   out_3647176865632245870[223] = 0;
   out_3647176865632245870[224] = 0;
   out_3647176865632245870[225] = 0;
   out_3647176865632245870[226] = 0;
   out_3647176865632245870[227] = 0;
   out_3647176865632245870[228] = 0;
   out_3647176865632245870[229] = 0;
   out_3647176865632245870[230] = 0;
   out_3647176865632245870[231] = 0;
   out_3647176865632245870[232] = 0;
   out_3647176865632245870[233] = 0;
   out_3647176865632245870[234] = 0;
   out_3647176865632245870[235] = 0;
   out_3647176865632245870[236] = 0;
   out_3647176865632245870[237] = 0;
   out_3647176865632245870[238] = 0;
   out_3647176865632245870[239] = 0;
   out_3647176865632245870[240] = 0;
   out_3647176865632245870[241] = 0;
   out_3647176865632245870[242] = 1;
   out_3647176865632245870[243] = 0;
   out_3647176865632245870[244] = 0;
   out_3647176865632245870[245] = 0;
   out_3647176865632245870[246] = 0;
   out_3647176865632245870[247] = 0;
   out_3647176865632245870[248] = 0;
   out_3647176865632245870[249] = 0;
   out_3647176865632245870[250] = 0;
   out_3647176865632245870[251] = 0;
   out_3647176865632245870[252] = 0;
   out_3647176865632245870[253] = 0;
   out_3647176865632245870[254] = 0;
   out_3647176865632245870[255] = 0;
   out_3647176865632245870[256] = 0;
   out_3647176865632245870[257] = 0;
   out_3647176865632245870[258] = 0;
   out_3647176865632245870[259] = 0;
   out_3647176865632245870[260] = 0;
   out_3647176865632245870[261] = 0;
   out_3647176865632245870[262] = 0;
   out_3647176865632245870[263] = 0;
   out_3647176865632245870[264] = 1;
   out_3647176865632245870[265] = 0;
   out_3647176865632245870[266] = 0;
   out_3647176865632245870[267] = 0;
   out_3647176865632245870[268] = 0;
   out_3647176865632245870[269] = 0;
   out_3647176865632245870[270] = 0;
   out_3647176865632245870[271] = 0;
   out_3647176865632245870[272] = 0;
   out_3647176865632245870[273] = 0;
   out_3647176865632245870[274] = 0;
   out_3647176865632245870[275] = 0;
   out_3647176865632245870[276] = 0;
   out_3647176865632245870[277] = 0;
   out_3647176865632245870[278] = 0;
   out_3647176865632245870[279] = 0;
   out_3647176865632245870[280] = 0;
   out_3647176865632245870[281] = 0;
   out_3647176865632245870[282] = 0;
   out_3647176865632245870[283] = 0;
   out_3647176865632245870[284] = 0;
   out_3647176865632245870[285] = 0;
   out_3647176865632245870[286] = 1;
   out_3647176865632245870[287] = 0;
   out_3647176865632245870[288] = 0;
   out_3647176865632245870[289] = 0;
   out_3647176865632245870[290] = 0;
   out_3647176865632245870[291] = 0;
   out_3647176865632245870[292] = 0;
   out_3647176865632245870[293] = 0;
   out_3647176865632245870[294] = 0;
   out_3647176865632245870[295] = 0;
   out_3647176865632245870[296] = 0;
   out_3647176865632245870[297] = 0;
   out_3647176865632245870[298] = 0;
   out_3647176865632245870[299] = 0;
   out_3647176865632245870[300] = 0;
   out_3647176865632245870[301] = 0;
   out_3647176865632245870[302] = 0;
   out_3647176865632245870[303] = 0;
   out_3647176865632245870[304] = 0;
   out_3647176865632245870[305] = 0;
   out_3647176865632245870[306] = 0;
   out_3647176865632245870[307] = 0;
   out_3647176865632245870[308] = 1;
   out_3647176865632245870[309] = 0;
   out_3647176865632245870[310] = 0;
   out_3647176865632245870[311] = 0;
   out_3647176865632245870[312] = 0;
   out_3647176865632245870[313] = 0;
   out_3647176865632245870[314] = 0;
   out_3647176865632245870[315] = 0;
   out_3647176865632245870[316] = 0;
   out_3647176865632245870[317] = 0;
   out_3647176865632245870[318] = 0;
   out_3647176865632245870[319] = 0;
   out_3647176865632245870[320] = 0;
   out_3647176865632245870[321] = 0;
   out_3647176865632245870[322] = 0;
   out_3647176865632245870[323] = 0;
   out_3647176865632245870[324] = 0;
   out_3647176865632245870[325] = 0;
   out_3647176865632245870[326] = 0;
   out_3647176865632245870[327] = 0;
   out_3647176865632245870[328] = 0;
   out_3647176865632245870[329] = 0;
   out_3647176865632245870[330] = 1;
   out_3647176865632245870[331] = 0;
   out_3647176865632245870[332] = 0;
   out_3647176865632245870[333] = 0;
   out_3647176865632245870[334] = 0;
   out_3647176865632245870[335] = 0;
   out_3647176865632245870[336] = 0;
   out_3647176865632245870[337] = 0;
   out_3647176865632245870[338] = 0;
   out_3647176865632245870[339] = 0;
   out_3647176865632245870[340] = 0;
   out_3647176865632245870[341] = 0;
   out_3647176865632245870[342] = 0;
   out_3647176865632245870[343] = 0;
   out_3647176865632245870[344] = 0;
   out_3647176865632245870[345] = 0;
   out_3647176865632245870[346] = 0;
   out_3647176865632245870[347] = 0;
   out_3647176865632245870[348] = 0;
   out_3647176865632245870[349] = 0;
   out_3647176865632245870[350] = 0;
   out_3647176865632245870[351] = 0;
   out_3647176865632245870[352] = 1;
   out_3647176865632245870[353] = 0;
   out_3647176865632245870[354] = 0;
   out_3647176865632245870[355] = 0;
   out_3647176865632245870[356] = 0;
   out_3647176865632245870[357] = 0;
   out_3647176865632245870[358] = 0;
   out_3647176865632245870[359] = 0;
   out_3647176865632245870[360] = 0;
   out_3647176865632245870[361] = 0;
   out_3647176865632245870[362] = 0;
   out_3647176865632245870[363] = 0;
   out_3647176865632245870[364] = 0;
   out_3647176865632245870[365] = 0;
   out_3647176865632245870[366] = 0;
   out_3647176865632245870[367] = 0;
   out_3647176865632245870[368] = 0;
   out_3647176865632245870[369] = 0;
   out_3647176865632245870[370] = 0;
   out_3647176865632245870[371] = 0;
   out_3647176865632245870[372] = 0;
   out_3647176865632245870[373] = 0;
   out_3647176865632245870[374] = 1;
   out_3647176865632245870[375] = 0;
   out_3647176865632245870[376] = 0;
   out_3647176865632245870[377] = 0;
   out_3647176865632245870[378] = 0;
   out_3647176865632245870[379] = 0;
   out_3647176865632245870[380] = 0;
   out_3647176865632245870[381] = 0;
   out_3647176865632245870[382] = 0;
   out_3647176865632245870[383] = 0;
   out_3647176865632245870[384] = 0;
   out_3647176865632245870[385] = 0;
   out_3647176865632245870[386] = 0;
   out_3647176865632245870[387] = 0;
   out_3647176865632245870[388] = 0;
   out_3647176865632245870[389] = 0;
   out_3647176865632245870[390] = 0;
   out_3647176865632245870[391] = 0;
   out_3647176865632245870[392] = 0;
   out_3647176865632245870[393] = 0;
   out_3647176865632245870[394] = 0;
   out_3647176865632245870[395] = 0;
   out_3647176865632245870[396] = 1;
   out_3647176865632245870[397] = 0;
   out_3647176865632245870[398] = 0;
   out_3647176865632245870[399] = 0;
   out_3647176865632245870[400] = 0;
   out_3647176865632245870[401] = 0;
   out_3647176865632245870[402] = 0;
   out_3647176865632245870[403] = 0;
   out_3647176865632245870[404] = 0;
   out_3647176865632245870[405] = 0;
   out_3647176865632245870[406] = 0;
   out_3647176865632245870[407] = 0;
   out_3647176865632245870[408] = 0;
   out_3647176865632245870[409] = 0;
   out_3647176865632245870[410] = 0;
   out_3647176865632245870[411] = 0;
   out_3647176865632245870[412] = 0;
   out_3647176865632245870[413] = 0;
   out_3647176865632245870[414] = 0;
   out_3647176865632245870[415] = 0;
   out_3647176865632245870[416] = 0;
   out_3647176865632245870[417] = 0;
   out_3647176865632245870[418] = 1;
   out_3647176865632245870[419] = 0;
   out_3647176865632245870[420] = 0;
   out_3647176865632245870[421] = 0;
   out_3647176865632245870[422] = 0;
   out_3647176865632245870[423] = 0;
   out_3647176865632245870[424] = 0;
   out_3647176865632245870[425] = 0;
   out_3647176865632245870[426] = 0;
   out_3647176865632245870[427] = 0;
   out_3647176865632245870[428] = 0;
   out_3647176865632245870[429] = 0;
   out_3647176865632245870[430] = 0;
   out_3647176865632245870[431] = 0;
   out_3647176865632245870[432] = 0;
   out_3647176865632245870[433] = 0;
   out_3647176865632245870[434] = 0;
   out_3647176865632245870[435] = 0;
   out_3647176865632245870[436] = 0;
   out_3647176865632245870[437] = 0;
   out_3647176865632245870[438] = 0;
   out_3647176865632245870[439] = 0;
   out_3647176865632245870[440] = 1;
}
void h_4(double *state, double *unused, double *out_8686664304179300181) {
   out_8686664304179300181[0] = state[10] + state[13];
   out_8686664304179300181[1] = state[11] + state[14];
   out_8686664304179300181[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4737414633741096164) {
   out_4737414633741096164[0] = 0;
   out_4737414633741096164[1] = 0;
   out_4737414633741096164[2] = 0;
   out_4737414633741096164[3] = 0;
   out_4737414633741096164[4] = 0;
   out_4737414633741096164[5] = 0;
   out_4737414633741096164[6] = 0;
   out_4737414633741096164[7] = 0;
   out_4737414633741096164[8] = 0;
   out_4737414633741096164[9] = 0;
   out_4737414633741096164[10] = 1;
   out_4737414633741096164[11] = 0;
   out_4737414633741096164[12] = 0;
   out_4737414633741096164[13] = 1;
   out_4737414633741096164[14] = 0;
   out_4737414633741096164[15] = 0;
   out_4737414633741096164[16] = 0;
   out_4737414633741096164[17] = 0;
   out_4737414633741096164[18] = 0;
   out_4737414633741096164[19] = 0;
   out_4737414633741096164[20] = 0;
   out_4737414633741096164[21] = 0;
   out_4737414633741096164[22] = 0;
   out_4737414633741096164[23] = 0;
   out_4737414633741096164[24] = 0;
   out_4737414633741096164[25] = 0;
   out_4737414633741096164[26] = 0;
   out_4737414633741096164[27] = 0;
   out_4737414633741096164[28] = 0;
   out_4737414633741096164[29] = 0;
   out_4737414633741096164[30] = 0;
   out_4737414633741096164[31] = 0;
   out_4737414633741096164[32] = 0;
   out_4737414633741096164[33] = 1;
   out_4737414633741096164[34] = 0;
   out_4737414633741096164[35] = 0;
   out_4737414633741096164[36] = 1;
   out_4737414633741096164[37] = 0;
   out_4737414633741096164[38] = 0;
   out_4737414633741096164[39] = 0;
   out_4737414633741096164[40] = 0;
   out_4737414633741096164[41] = 0;
   out_4737414633741096164[42] = 0;
   out_4737414633741096164[43] = 0;
   out_4737414633741096164[44] = 0;
   out_4737414633741096164[45] = 0;
   out_4737414633741096164[46] = 0;
   out_4737414633741096164[47] = 0;
   out_4737414633741096164[48] = 0;
   out_4737414633741096164[49] = 0;
   out_4737414633741096164[50] = 0;
   out_4737414633741096164[51] = 0;
   out_4737414633741096164[52] = 0;
   out_4737414633741096164[53] = 0;
   out_4737414633741096164[54] = 0;
   out_4737414633741096164[55] = 0;
   out_4737414633741096164[56] = 1;
   out_4737414633741096164[57] = 0;
   out_4737414633741096164[58] = 0;
   out_4737414633741096164[59] = 1;
   out_4737414633741096164[60] = 0;
   out_4737414633741096164[61] = 0;
   out_4737414633741096164[62] = 0;
   out_4737414633741096164[63] = 0;
   out_4737414633741096164[64] = 0;
   out_4737414633741096164[65] = 0;
}
void h_9(double *state, double *unused, double *out_5565585308076199796) {
   out_5565585308076199796[0] = state[10];
   out_5565585308076199796[1] = state[11];
   out_5565585308076199796[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6422110504704007982) {
   out_6422110504704007982[0] = 0;
   out_6422110504704007982[1] = 0;
   out_6422110504704007982[2] = 0;
   out_6422110504704007982[3] = 0;
   out_6422110504704007982[4] = 0;
   out_6422110504704007982[5] = 0;
   out_6422110504704007982[6] = 0;
   out_6422110504704007982[7] = 0;
   out_6422110504704007982[8] = 0;
   out_6422110504704007982[9] = 0;
   out_6422110504704007982[10] = 1;
   out_6422110504704007982[11] = 0;
   out_6422110504704007982[12] = 0;
   out_6422110504704007982[13] = 0;
   out_6422110504704007982[14] = 0;
   out_6422110504704007982[15] = 0;
   out_6422110504704007982[16] = 0;
   out_6422110504704007982[17] = 0;
   out_6422110504704007982[18] = 0;
   out_6422110504704007982[19] = 0;
   out_6422110504704007982[20] = 0;
   out_6422110504704007982[21] = 0;
   out_6422110504704007982[22] = 0;
   out_6422110504704007982[23] = 0;
   out_6422110504704007982[24] = 0;
   out_6422110504704007982[25] = 0;
   out_6422110504704007982[26] = 0;
   out_6422110504704007982[27] = 0;
   out_6422110504704007982[28] = 0;
   out_6422110504704007982[29] = 0;
   out_6422110504704007982[30] = 0;
   out_6422110504704007982[31] = 0;
   out_6422110504704007982[32] = 0;
   out_6422110504704007982[33] = 1;
   out_6422110504704007982[34] = 0;
   out_6422110504704007982[35] = 0;
   out_6422110504704007982[36] = 0;
   out_6422110504704007982[37] = 0;
   out_6422110504704007982[38] = 0;
   out_6422110504704007982[39] = 0;
   out_6422110504704007982[40] = 0;
   out_6422110504704007982[41] = 0;
   out_6422110504704007982[42] = 0;
   out_6422110504704007982[43] = 0;
   out_6422110504704007982[44] = 0;
   out_6422110504704007982[45] = 0;
   out_6422110504704007982[46] = 0;
   out_6422110504704007982[47] = 0;
   out_6422110504704007982[48] = 0;
   out_6422110504704007982[49] = 0;
   out_6422110504704007982[50] = 0;
   out_6422110504704007982[51] = 0;
   out_6422110504704007982[52] = 0;
   out_6422110504704007982[53] = 0;
   out_6422110504704007982[54] = 0;
   out_6422110504704007982[55] = 0;
   out_6422110504704007982[56] = 1;
   out_6422110504704007982[57] = 0;
   out_6422110504704007982[58] = 0;
   out_6422110504704007982[59] = 0;
   out_6422110504704007982[60] = 0;
   out_6422110504704007982[61] = 0;
   out_6422110504704007982[62] = 0;
   out_6422110504704007982[63] = 0;
   out_6422110504704007982[64] = 0;
   out_6422110504704007982[65] = 0;
}
void h_10(double *state, double *unused, double *out_1353507015058286203) {
   out_1353507015058286203[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1353507015058286203[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1353507015058286203[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6027635784935919290) {
   out_6027635784935919290[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6027635784935919290[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6027635784935919290[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6027635784935919290[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6027635784935919290[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6027635784935919290[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6027635784935919290[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6027635784935919290[7] = 0;
   out_6027635784935919290[8] = 0;
   out_6027635784935919290[9] = 0;
   out_6027635784935919290[10] = 0;
   out_6027635784935919290[11] = 0;
   out_6027635784935919290[12] = 0;
   out_6027635784935919290[13] = 0;
   out_6027635784935919290[14] = 0;
   out_6027635784935919290[15] = 0;
   out_6027635784935919290[16] = 1;
   out_6027635784935919290[17] = 0;
   out_6027635784935919290[18] = 0;
   out_6027635784935919290[19] = 1;
   out_6027635784935919290[20] = 0;
   out_6027635784935919290[21] = 0;
   out_6027635784935919290[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6027635784935919290[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6027635784935919290[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6027635784935919290[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6027635784935919290[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6027635784935919290[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6027635784935919290[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6027635784935919290[29] = 0;
   out_6027635784935919290[30] = 0;
   out_6027635784935919290[31] = 0;
   out_6027635784935919290[32] = 0;
   out_6027635784935919290[33] = 0;
   out_6027635784935919290[34] = 0;
   out_6027635784935919290[35] = 0;
   out_6027635784935919290[36] = 0;
   out_6027635784935919290[37] = 0;
   out_6027635784935919290[38] = 0;
   out_6027635784935919290[39] = 1;
   out_6027635784935919290[40] = 0;
   out_6027635784935919290[41] = 0;
   out_6027635784935919290[42] = 1;
   out_6027635784935919290[43] = 0;
   out_6027635784935919290[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6027635784935919290[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6027635784935919290[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6027635784935919290[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6027635784935919290[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6027635784935919290[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6027635784935919290[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6027635784935919290[51] = 0;
   out_6027635784935919290[52] = 0;
   out_6027635784935919290[53] = 0;
   out_6027635784935919290[54] = 0;
   out_6027635784935919290[55] = 0;
   out_6027635784935919290[56] = 0;
   out_6027635784935919290[57] = 0;
   out_6027635784935919290[58] = 0;
   out_6027635784935919290[59] = 0;
   out_6027635784935919290[60] = 0;
   out_6027635784935919290[61] = 0;
   out_6027635784935919290[62] = 1;
   out_6027635784935919290[63] = 0;
   out_6027635784935919290[64] = 0;
   out_6027635784935919290[65] = 1;
}
void h_12(double *state, double *unused, double *out_7631493099303276238) {
   out_7631493099303276238[0] = state[0];
   out_7631493099303276238[1] = state[1];
   out_7631493099303276238[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8689873031936493657) {
   out_8689873031936493657[0] = 1;
   out_8689873031936493657[1] = 0;
   out_8689873031936493657[2] = 0;
   out_8689873031936493657[3] = 0;
   out_8689873031936493657[4] = 0;
   out_8689873031936493657[5] = 0;
   out_8689873031936493657[6] = 0;
   out_8689873031936493657[7] = 0;
   out_8689873031936493657[8] = 0;
   out_8689873031936493657[9] = 0;
   out_8689873031936493657[10] = 0;
   out_8689873031936493657[11] = 0;
   out_8689873031936493657[12] = 0;
   out_8689873031936493657[13] = 0;
   out_8689873031936493657[14] = 0;
   out_8689873031936493657[15] = 0;
   out_8689873031936493657[16] = 0;
   out_8689873031936493657[17] = 0;
   out_8689873031936493657[18] = 0;
   out_8689873031936493657[19] = 0;
   out_8689873031936493657[20] = 0;
   out_8689873031936493657[21] = 0;
   out_8689873031936493657[22] = 0;
   out_8689873031936493657[23] = 1;
   out_8689873031936493657[24] = 0;
   out_8689873031936493657[25] = 0;
   out_8689873031936493657[26] = 0;
   out_8689873031936493657[27] = 0;
   out_8689873031936493657[28] = 0;
   out_8689873031936493657[29] = 0;
   out_8689873031936493657[30] = 0;
   out_8689873031936493657[31] = 0;
   out_8689873031936493657[32] = 0;
   out_8689873031936493657[33] = 0;
   out_8689873031936493657[34] = 0;
   out_8689873031936493657[35] = 0;
   out_8689873031936493657[36] = 0;
   out_8689873031936493657[37] = 0;
   out_8689873031936493657[38] = 0;
   out_8689873031936493657[39] = 0;
   out_8689873031936493657[40] = 0;
   out_8689873031936493657[41] = 0;
   out_8689873031936493657[42] = 0;
   out_8689873031936493657[43] = 0;
   out_8689873031936493657[44] = 0;
   out_8689873031936493657[45] = 0;
   out_8689873031936493657[46] = 1;
   out_8689873031936493657[47] = 0;
   out_8689873031936493657[48] = 0;
   out_8689873031936493657[49] = 0;
   out_8689873031936493657[50] = 0;
   out_8689873031936493657[51] = 0;
   out_8689873031936493657[52] = 0;
   out_8689873031936493657[53] = 0;
   out_8689873031936493657[54] = 0;
   out_8689873031936493657[55] = 0;
   out_8689873031936493657[56] = 0;
   out_8689873031936493657[57] = 0;
   out_8689873031936493657[58] = 0;
   out_8689873031936493657[59] = 0;
   out_8689873031936493657[60] = 0;
   out_8689873031936493657[61] = 0;
   out_8689873031936493657[62] = 0;
   out_8689873031936493657[63] = 0;
   out_8689873031936493657[64] = 0;
   out_8689873031936493657[65] = 0;
}
void h_35(double *state, double *unused, double *out_3508652193024788518) {
   out_3508652193024788518[0] = state[7];
   out_3508652193024788518[1] = state[8];
   out_3508652193024788518[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5944309999611479948) {
   out_5944309999611479948[0] = 0;
   out_5944309999611479948[1] = 0;
   out_5944309999611479948[2] = 0;
   out_5944309999611479948[3] = 0;
   out_5944309999611479948[4] = 0;
   out_5944309999611479948[5] = 0;
   out_5944309999611479948[6] = 0;
   out_5944309999611479948[7] = 1;
   out_5944309999611479948[8] = 0;
   out_5944309999611479948[9] = 0;
   out_5944309999611479948[10] = 0;
   out_5944309999611479948[11] = 0;
   out_5944309999611479948[12] = 0;
   out_5944309999611479948[13] = 0;
   out_5944309999611479948[14] = 0;
   out_5944309999611479948[15] = 0;
   out_5944309999611479948[16] = 0;
   out_5944309999611479948[17] = 0;
   out_5944309999611479948[18] = 0;
   out_5944309999611479948[19] = 0;
   out_5944309999611479948[20] = 0;
   out_5944309999611479948[21] = 0;
   out_5944309999611479948[22] = 0;
   out_5944309999611479948[23] = 0;
   out_5944309999611479948[24] = 0;
   out_5944309999611479948[25] = 0;
   out_5944309999611479948[26] = 0;
   out_5944309999611479948[27] = 0;
   out_5944309999611479948[28] = 0;
   out_5944309999611479948[29] = 0;
   out_5944309999611479948[30] = 1;
   out_5944309999611479948[31] = 0;
   out_5944309999611479948[32] = 0;
   out_5944309999611479948[33] = 0;
   out_5944309999611479948[34] = 0;
   out_5944309999611479948[35] = 0;
   out_5944309999611479948[36] = 0;
   out_5944309999611479948[37] = 0;
   out_5944309999611479948[38] = 0;
   out_5944309999611479948[39] = 0;
   out_5944309999611479948[40] = 0;
   out_5944309999611479948[41] = 0;
   out_5944309999611479948[42] = 0;
   out_5944309999611479948[43] = 0;
   out_5944309999611479948[44] = 0;
   out_5944309999611479948[45] = 0;
   out_5944309999611479948[46] = 0;
   out_5944309999611479948[47] = 0;
   out_5944309999611479948[48] = 0;
   out_5944309999611479948[49] = 0;
   out_5944309999611479948[50] = 0;
   out_5944309999611479948[51] = 0;
   out_5944309999611479948[52] = 0;
   out_5944309999611479948[53] = 1;
   out_5944309999611479948[54] = 0;
   out_5944309999611479948[55] = 0;
   out_5944309999611479948[56] = 0;
   out_5944309999611479948[57] = 0;
   out_5944309999611479948[58] = 0;
   out_5944309999611479948[59] = 0;
   out_5944309999611479948[60] = 0;
   out_5944309999611479948[61] = 0;
   out_5944309999611479948[62] = 0;
   out_5944309999611479948[63] = 0;
   out_5944309999611479948[64] = 0;
   out_5944309999611479948[65] = 0;
}
void h_32(double *state, double *unused, double *out_8916862548391282088) {
   out_8916862548391282088[0] = state[3];
   out_8916862548391282088[1] = state[4];
   out_8916862548391282088[2] = state[5];
   out_8916862548391282088[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6256931694498924976) {
   out_6256931694498924976[0] = 0;
   out_6256931694498924976[1] = 0;
   out_6256931694498924976[2] = 0;
   out_6256931694498924976[3] = 1;
   out_6256931694498924976[4] = 0;
   out_6256931694498924976[5] = 0;
   out_6256931694498924976[6] = 0;
   out_6256931694498924976[7] = 0;
   out_6256931694498924976[8] = 0;
   out_6256931694498924976[9] = 0;
   out_6256931694498924976[10] = 0;
   out_6256931694498924976[11] = 0;
   out_6256931694498924976[12] = 0;
   out_6256931694498924976[13] = 0;
   out_6256931694498924976[14] = 0;
   out_6256931694498924976[15] = 0;
   out_6256931694498924976[16] = 0;
   out_6256931694498924976[17] = 0;
   out_6256931694498924976[18] = 0;
   out_6256931694498924976[19] = 0;
   out_6256931694498924976[20] = 0;
   out_6256931694498924976[21] = 0;
   out_6256931694498924976[22] = 0;
   out_6256931694498924976[23] = 0;
   out_6256931694498924976[24] = 0;
   out_6256931694498924976[25] = 0;
   out_6256931694498924976[26] = 1;
   out_6256931694498924976[27] = 0;
   out_6256931694498924976[28] = 0;
   out_6256931694498924976[29] = 0;
   out_6256931694498924976[30] = 0;
   out_6256931694498924976[31] = 0;
   out_6256931694498924976[32] = 0;
   out_6256931694498924976[33] = 0;
   out_6256931694498924976[34] = 0;
   out_6256931694498924976[35] = 0;
   out_6256931694498924976[36] = 0;
   out_6256931694498924976[37] = 0;
   out_6256931694498924976[38] = 0;
   out_6256931694498924976[39] = 0;
   out_6256931694498924976[40] = 0;
   out_6256931694498924976[41] = 0;
   out_6256931694498924976[42] = 0;
   out_6256931694498924976[43] = 0;
   out_6256931694498924976[44] = 0;
   out_6256931694498924976[45] = 0;
   out_6256931694498924976[46] = 0;
   out_6256931694498924976[47] = 0;
   out_6256931694498924976[48] = 0;
   out_6256931694498924976[49] = 1;
   out_6256931694498924976[50] = 0;
   out_6256931694498924976[51] = 0;
   out_6256931694498924976[52] = 0;
   out_6256931694498924976[53] = 0;
   out_6256931694498924976[54] = 0;
   out_6256931694498924976[55] = 0;
   out_6256931694498924976[56] = 0;
   out_6256931694498924976[57] = 0;
   out_6256931694498924976[58] = 0;
   out_6256931694498924976[59] = 0;
   out_6256931694498924976[60] = 0;
   out_6256931694498924976[61] = 0;
   out_6256931694498924976[62] = 0;
   out_6256931694498924976[63] = 0;
   out_6256931694498924976[64] = 0;
   out_6256931694498924976[65] = 0;
   out_6256931694498924976[66] = 0;
   out_6256931694498924976[67] = 0;
   out_6256931694498924976[68] = 0;
   out_6256931694498924976[69] = 0;
   out_6256931694498924976[70] = 0;
   out_6256931694498924976[71] = 0;
   out_6256931694498924976[72] = 1;
   out_6256931694498924976[73] = 0;
   out_6256931694498924976[74] = 0;
   out_6256931694498924976[75] = 0;
   out_6256931694498924976[76] = 0;
   out_6256931694498924976[77] = 0;
   out_6256931694498924976[78] = 0;
   out_6256931694498924976[79] = 0;
   out_6256931694498924976[80] = 0;
   out_6256931694498924976[81] = 0;
   out_6256931694498924976[82] = 0;
   out_6256931694498924976[83] = 0;
   out_6256931694498924976[84] = 0;
   out_6256931694498924976[85] = 0;
   out_6256931694498924976[86] = 0;
   out_6256931694498924976[87] = 0;
}
void h_13(double *state, double *unused, double *out_108113376412138945) {
   out_108113376412138945[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_108113376412138945[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_108113376412138945[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5820312086696149770) {
   out_5820312086696149770[0] = 0;
   out_5820312086696149770[1] = 0;
   out_5820312086696149770[2] = 0;
   out_5820312086696149770[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5820312086696149770[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5820312086696149770[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5820312086696149770[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5820312086696149770[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5820312086696149770[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5820312086696149770[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5820312086696149770[10] = 0;
   out_5820312086696149770[11] = 0;
   out_5820312086696149770[12] = 0;
   out_5820312086696149770[13] = 0;
   out_5820312086696149770[14] = 0;
   out_5820312086696149770[15] = 0;
   out_5820312086696149770[16] = 0;
   out_5820312086696149770[17] = 0;
   out_5820312086696149770[18] = 0;
   out_5820312086696149770[19] = 0;
   out_5820312086696149770[20] = 0;
   out_5820312086696149770[21] = 0;
   out_5820312086696149770[22] = 0;
   out_5820312086696149770[23] = 0;
   out_5820312086696149770[24] = 0;
   out_5820312086696149770[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5820312086696149770[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5820312086696149770[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5820312086696149770[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5820312086696149770[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5820312086696149770[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5820312086696149770[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5820312086696149770[32] = 0;
   out_5820312086696149770[33] = 0;
   out_5820312086696149770[34] = 0;
   out_5820312086696149770[35] = 0;
   out_5820312086696149770[36] = 0;
   out_5820312086696149770[37] = 0;
   out_5820312086696149770[38] = 0;
   out_5820312086696149770[39] = 0;
   out_5820312086696149770[40] = 0;
   out_5820312086696149770[41] = 0;
   out_5820312086696149770[42] = 0;
   out_5820312086696149770[43] = 0;
   out_5820312086696149770[44] = 0;
   out_5820312086696149770[45] = 0;
   out_5820312086696149770[46] = 0;
   out_5820312086696149770[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5820312086696149770[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5820312086696149770[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5820312086696149770[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5820312086696149770[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5820312086696149770[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5820312086696149770[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5820312086696149770[54] = 0;
   out_5820312086696149770[55] = 0;
   out_5820312086696149770[56] = 0;
   out_5820312086696149770[57] = 0;
   out_5820312086696149770[58] = 0;
   out_5820312086696149770[59] = 0;
   out_5820312086696149770[60] = 0;
   out_5820312086696149770[61] = 0;
   out_5820312086696149770[62] = 0;
   out_5820312086696149770[63] = 0;
   out_5820312086696149770[64] = 0;
   out_5820312086696149770[65] = 0;
}
void h_14(double *state, double *unused, double *out_5565585308076199796) {
   out_5565585308076199796[0] = state[10];
   out_5565585308076199796[1] = state[11];
   out_5565585308076199796[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6422110504704007982) {
   out_6422110504704007982[0] = 0;
   out_6422110504704007982[1] = 0;
   out_6422110504704007982[2] = 0;
   out_6422110504704007982[3] = 0;
   out_6422110504704007982[4] = 0;
   out_6422110504704007982[5] = 0;
   out_6422110504704007982[6] = 0;
   out_6422110504704007982[7] = 0;
   out_6422110504704007982[8] = 0;
   out_6422110504704007982[9] = 0;
   out_6422110504704007982[10] = 1;
   out_6422110504704007982[11] = 0;
   out_6422110504704007982[12] = 0;
   out_6422110504704007982[13] = 0;
   out_6422110504704007982[14] = 0;
   out_6422110504704007982[15] = 0;
   out_6422110504704007982[16] = 0;
   out_6422110504704007982[17] = 0;
   out_6422110504704007982[18] = 0;
   out_6422110504704007982[19] = 0;
   out_6422110504704007982[20] = 0;
   out_6422110504704007982[21] = 0;
   out_6422110504704007982[22] = 0;
   out_6422110504704007982[23] = 0;
   out_6422110504704007982[24] = 0;
   out_6422110504704007982[25] = 0;
   out_6422110504704007982[26] = 0;
   out_6422110504704007982[27] = 0;
   out_6422110504704007982[28] = 0;
   out_6422110504704007982[29] = 0;
   out_6422110504704007982[30] = 0;
   out_6422110504704007982[31] = 0;
   out_6422110504704007982[32] = 0;
   out_6422110504704007982[33] = 1;
   out_6422110504704007982[34] = 0;
   out_6422110504704007982[35] = 0;
   out_6422110504704007982[36] = 0;
   out_6422110504704007982[37] = 0;
   out_6422110504704007982[38] = 0;
   out_6422110504704007982[39] = 0;
   out_6422110504704007982[40] = 0;
   out_6422110504704007982[41] = 0;
   out_6422110504704007982[42] = 0;
   out_6422110504704007982[43] = 0;
   out_6422110504704007982[44] = 0;
   out_6422110504704007982[45] = 0;
   out_6422110504704007982[46] = 0;
   out_6422110504704007982[47] = 0;
   out_6422110504704007982[48] = 0;
   out_6422110504704007982[49] = 0;
   out_6422110504704007982[50] = 0;
   out_6422110504704007982[51] = 0;
   out_6422110504704007982[52] = 0;
   out_6422110504704007982[53] = 0;
   out_6422110504704007982[54] = 0;
   out_6422110504704007982[55] = 0;
   out_6422110504704007982[56] = 1;
   out_6422110504704007982[57] = 0;
   out_6422110504704007982[58] = 0;
   out_6422110504704007982[59] = 0;
   out_6422110504704007982[60] = 0;
   out_6422110504704007982[61] = 0;
   out_6422110504704007982[62] = 0;
   out_6422110504704007982[63] = 0;
   out_6422110504704007982[64] = 0;
   out_6422110504704007982[65] = 0;
}
void h_33(double *state, double *unused, double *out_6196126748769845638) {
   out_6196126748769845638[0] = state[16];
   out_6196126748769845638[1] = state[17];
   out_6196126748769845638[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7192110377956990472) {
   out_7192110377956990472[0] = 0;
   out_7192110377956990472[1] = 0;
   out_7192110377956990472[2] = 0;
   out_7192110377956990472[3] = 0;
   out_7192110377956990472[4] = 0;
   out_7192110377956990472[5] = 0;
   out_7192110377956990472[6] = 0;
   out_7192110377956990472[7] = 0;
   out_7192110377956990472[8] = 0;
   out_7192110377956990472[9] = 0;
   out_7192110377956990472[10] = 0;
   out_7192110377956990472[11] = 0;
   out_7192110377956990472[12] = 0;
   out_7192110377956990472[13] = 0;
   out_7192110377956990472[14] = 0;
   out_7192110377956990472[15] = 0;
   out_7192110377956990472[16] = 1;
   out_7192110377956990472[17] = 0;
   out_7192110377956990472[18] = 0;
   out_7192110377956990472[19] = 0;
   out_7192110377956990472[20] = 0;
   out_7192110377956990472[21] = 0;
   out_7192110377956990472[22] = 0;
   out_7192110377956990472[23] = 0;
   out_7192110377956990472[24] = 0;
   out_7192110377956990472[25] = 0;
   out_7192110377956990472[26] = 0;
   out_7192110377956990472[27] = 0;
   out_7192110377956990472[28] = 0;
   out_7192110377956990472[29] = 0;
   out_7192110377956990472[30] = 0;
   out_7192110377956990472[31] = 0;
   out_7192110377956990472[32] = 0;
   out_7192110377956990472[33] = 0;
   out_7192110377956990472[34] = 0;
   out_7192110377956990472[35] = 0;
   out_7192110377956990472[36] = 0;
   out_7192110377956990472[37] = 0;
   out_7192110377956990472[38] = 0;
   out_7192110377956990472[39] = 1;
   out_7192110377956990472[40] = 0;
   out_7192110377956990472[41] = 0;
   out_7192110377956990472[42] = 0;
   out_7192110377956990472[43] = 0;
   out_7192110377956990472[44] = 0;
   out_7192110377956990472[45] = 0;
   out_7192110377956990472[46] = 0;
   out_7192110377956990472[47] = 0;
   out_7192110377956990472[48] = 0;
   out_7192110377956990472[49] = 0;
   out_7192110377956990472[50] = 0;
   out_7192110377956990472[51] = 0;
   out_7192110377956990472[52] = 0;
   out_7192110377956990472[53] = 0;
   out_7192110377956990472[54] = 0;
   out_7192110377956990472[55] = 0;
   out_7192110377956990472[56] = 0;
   out_7192110377956990472[57] = 0;
   out_7192110377956990472[58] = 0;
   out_7192110377956990472[59] = 0;
   out_7192110377956990472[60] = 0;
   out_7192110377956990472[61] = 0;
   out_7192110377956990472[62] = 1;
   out_7192110377956990472[63] = 0;
   out_7192110377956990472[64] = 0;
   out_7192110377956990472[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_209133747298070962) {
  H(in_vec, out_209133747298070962);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1127464374514398162) {
  err_fun(nom_x, delta_x, out_1127464374514398162);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8453671828857282665) {
  inv_err_fun(nom_x, true_x, out_8453671828857282665);
}
void live_H_mod_fun(double *state, double *out_6465515215284678187) {
  H_mod_fun(state, out_6465515215284678187);
}
void live_f_fun(double *state, double dt, double *out_5601687001448067779) {
  f_fun(state,  dt, out_5601687001448067779);
}
void live_F_fun(double *state, double dt, double *out_3647176865632245870) {
  F_fun(state,  dt, out_3647176865632245870);
}
void live_h_4(double *state, double *unused, double *out_8686664304179300181) {
  h_4(state, unused, out_8686664304179300181);
}
void live_H_4(double *state, double *unused, double *out_4737414633741096164) {
  H_4(state, unused, out_4737414633741096164);
}
void live_h_9(double *state, double *unused, double *out_5565585308076199796) {
  h_9(state, unused, out_5565585308076199796);
}
void live_H_9(double *state, double *unused, double *out_6422110504704007982) {
  H_9(state, unused, out_6422110504704007982);
}
void live_h_10(double *state, double *unused, double *out_1353507015058286203) {
  h_10(state, unused, out_1353507015058286203);
}
void live_H_10(double *state, double *unused, double *out_6027635784935919290) {
  H_10(state, unused, out_6027635784935919290);
}
void live_h_12(double *state, double *unused, double *out_7631493099303276238) {
  h_12(state, unused, out_7631493099303276238);
}
void live_H_12(double *state, double *unused, double *out_8689873031936493657) {
  H_12(state, unused, out_8689873031936493657);
}
void live_h_35(double *state, double *unused, double *out_3508652193024788518) {
  h_35(state, unused, out_3508652193024788518);
}
void live_H_35(double *state, double *unused, double *out_5944309999611479948) {
  H_35(state, unused, out_5944309999611479948);
}
void live_h_32(double *state, double *unused, double *out_8916862548391282088) {
  h_32(state, unused, out_8916862548391282088);
}
void live_H_32(double *state, double *unused, double *out_6256931694498924976) {
  H_32(state, unused, out_6256931694498924976);
}
void live_h_13(double *state, double *unused, double *out_108113376412138945) {
  h_13(state, unused, out_108113376412138945);
}
void live_H_13(double *state, double *unused, double *out_5820312086696149770) {
  H_13(state, unused, out_5820312086696149770);
}
void live_h_14(double *state, double *unused, double *out_5565585308076199796) {
  h_14(state, unused, out_5565585308076199796);
}
void live_H_14(double *state, double *unused, double *out_6422110504704007982) {
  H_14(state, unused, out_6422110504704007982);
}
void live_h_33(double *state, double *unused, double *out_6196126748769845638) {
  h_33(state, unused, out_6196126748769845638);
}
void live_H_33(double *state, double *unused, double *out_7192110377956990472) {
  H_33(state, unused, out_7192110377956990472);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
